{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Exam Details General Details Exam Name: Linux Foundation Certified System Administrator (LFCS) Mandatory Prerequisites: N/A Administered By: Linux Foundation Duration: 120 min Exam Type: Performance based Number of Questions: 22-24 Passing Score: 66% Retakes: 1 Certification Topics Essential Commands - 25% Operation of Running Systems - 20% User and Group Management - 10% Networking - 12% Service Configuration - 20% Storage Management - 13% Other Resources Highly recommended materials : KodeKloud LFCS Course (includes mock exams) KodeKloud Linux Challenges Other materials : Medium Blog Post Official Study Guide Testprep Training tutorial","title":"Exam Details"},{"location":"#exam-details","text":"","title":"Exam Details"},{"location":"#general-details","text":"Exam Name: Linux Foundation Certified System Administrator (LFCS) Mandatory Prerequisites: N/A Administered By: Linux Foundation Duration: 120 min Exam Type: Performance based Number of Questions: 22-24 Passing Score: 66% Retakes: 1","title":"General Details"},{"location":"#certification-topics","text":"Essential Commands - 25% Operation of Running Systems - 20% User and Group Management - 10% Networking - 12% Service Configuration - 20% Storage Management - 13%","title":"Certification Topics"},{"location":"#other-resources","text":"Highly recommended materials : KodeKloud LFCS Course (includes mock exams) KodeKloud Linux Challenges Other materials : Medium Blog Post Official Study Guide Testprep Training tutorial","title":"Other Resources"},{"location":"Topics/Essential_Commands/","text":"Essential Commands Topics Log into local & remote graphical and text mode consoles Search for files Compare and manipulate file content Input-Output redirection Analyze text using basic regular expressions Archive, backup, compress, unpack, and uncompress files Create, delete, copy, and move files and directories Create and manage hard and soft links List, set, and change standard file permissions Read, and use system documentation","title":"Index"},{"location":"Topics/Essential_Commands/#essential-commands","text":"","title":"Essential Commands"},{"location":"Topics/Essential_Commands/#topics","text":"Log into local & remote graphical and text mode consoles Search for files Compare and manipulate file content Input-Output redirection Analyze text using basic regular expressions Archive, backup, compress, unpack, and uncompress files Create, delete, copy, and move files and directories Create and manage hard and soft links List, set, and change standard file permissions Read, and use system documentation","title":"Topics"},{"location":"Topics/Essential_Commands/Advanced%20File%20Permissions/","text":"Advanced File Permissions SUID SGID Sticky Bit","title":"Advanced File Permissions"},{"location":"Topics/Essential_Commands/Advanced%20File%20Permissions/#advanced-file-permissions","text":"SUID SGID Sticky Bit","title":"Advanced File Permissions"},{"location":"Topics/Essential_Commands/Analyze%20text%20using%20basic%20regular%20expressions/","text":"Analyze text using basic regular expressions Basic Operators Operator List Starts with: ^ -> ^cat => cat nip Ends with: $ -> cat$ => octo cat Match exactly one: . ca.t => cat Match 0 or any: * -> ca*t => ct , c a t , c aa t Examples mike@lfcs:~$ cat sample.txt cat cut cattle octocat catnip Find all lines that start with \"cat\" mike@lfcs:~$ grep \"^cat\" sample.txt cat cattle catnip Find all lines that end with \"cat\" mike@lfcs:~$ grep \"cat$\" sample.txt cat octocat Find all words that start with \"c\" and end with \"t\" mike@lfcs:~$ grep -w \"c.t\" sample.txt cat cut Find all words that start with \"ca\" and are followed by 0 or more \"t\" mike@lfcs:~$ grep \"cat*\" sample.txt ca cat cattle octocat catnip Extended Regex Operators Note: These operators require either using egrep or grep -E to enable extended regex Operator List Match 1 or more: + -> ca+t => cat , caat Make previous character optional: ? -> ca?t => ct , cat Match previous character a specific amount of times: {} -> ca{1,3}t => cat , caat , caaat -> ca{1}t => cat -> ca{3}t => caaat Match any of the two: | -> cat|cut => cat , cut Match characters in range/set: [] -> c[a-c]t => cat , cbt , cct Negate range/set: [^] -> c[^u]t => ~~ cut ~~, cat Subexpressions: () -> (c[a-c]t)+ => cat , catcbt ... Examples Find all words that start with \"ca\" and are followed by 1 or more \"t\" mike@lfcs:~$ egrep 'cat+' sample.txt cat cattle octocat catnip Find all words that contain \"ca\" followed by 1 or no \"t\" mike@lfcs:~$ egrep \"cat?\" sample.txt ca cat cattle octocat catnip Find all words with at least 1 consecutive \"t\" mike@lfcs:~$ egrep \"t{1,}\" sample.txt cat cut cattle octocat catnip Find all words with at most 2 consecutive \"t\" mike@lfcs:~$ egrep \"t{,2}\" sample.txt ca cat cut cattle octocat catnip Find all words with exactly 2 consecutive \"t\" mike@lfcs:~$ egrep \"t{2}\" sample.txt cattle Find words matching either \"cat\" or \"cut\" mike@lfcs:~$ egrep \"cat|cut\" sample.txt cat cut cattle octocat catnip Find words matching either \"cat\" or \"cut\" mike@lfcs:~$ egrep \"c[a,u]t\" sample.txt cat cut cattle octocat catnip Find all http links, excluding https: egrep \"http[^s]\" file.txt","title":"Analyze text using basic regular expressions"},{"location":"Topics/Essential_Commands/Analyze%20text%20using%20basic%20regular%20expressions/#analyze-text-using-basic-regular-expressions","text":"","title":"Analyze text using basic regular expressions"},{"location":"Topics/Essential_Commands/Analyze%20text%20using%20basic%20regular%20expressions/#basic-operators","text":"","title":"Basic Operators"},{"location":"Topics/Essential_Commands/Analyze%20text%20using%20basic%20regular%20expressions/#operator-list","text":"Starts with: ^ -> ^cat => cat nip Ends with: $ -> cat$ => octo cat Match exactly one: . ca.t => cat Match 0 or any: * -> ca*t => ct , c a t , c aa t","title":"Operator List"},{"location":"Topics/Essential_Commands/Analyze%20text%20using%20basic%20regular%20expressions/#examples","text":"mike@lfcs:~$ cat sample.txt cat cut cattle octocat catnip Find all lines that start with \"cat\" mike@lfcs:~$ grep \"^cat\" sample.txt cat cattle catnip Find all lines that end with \"cat\" mike@lfcs:~$ grep \"cat$\" sample.txt cat octocat Find all words that start with \"c\" and end with \"t\" mike@lfcs:~$ grep -w \"c.t\" sample.txt cat cut Find all words that start with \"ca\" and are followed by 0 or more \"t\" mike@lfcs:~$ grep \"cat*\" sample.txt ca cat cattle octocat catnip","title":"Examples"},{"location":"Topics/Essential_Commands/Analyze%20text%20using%20basic%20regular%20expressions/#extended-regex-operators","text":"Note: These operators require either using egrep or grep -E to enable extended regex","title":"Extended Regex Operators"},{"location":"Topics/Essential_Commands/Analyze%20text%20using%20basic%20regular%20expressions/#operator-list_1","text":"Match 1 or more: + -> ca+t => cat , caat Make previous character optional: ? -> ca?t => ct , cat Match previous character a specific amount of times: {} -> ca{1,3}t => cat , caat , caaat -> ca{1}t => cat -> ca{3}t => caaat Match any of the two: | -> cat|cut => cat , cut Match characters in range/set: [] -> c[a-c]t => cat , cbt , cct Negate range/set: [^] -> c[^u]t => ~~ cut ~~, cat Subexpressions: () -> (c[a-c]t)+ => cat , catcbt ...","title":"Operator List"},{"location":"Topics/Essential_Commands/Analyze%20text%20using%20basic%20regular%20expressions/#examples_1","text":"Find all words that start with \"ca\" and are followed by 1 or more \"t\" mike@lfcs:~$ egrep 'cat+' sample.txt cat cattle octocat catnip Find all words that contain \"ca\" followed by 1 or no \"t\" mike@lfcs:~$ egrep \"cat?\" sample.txt ca cat cattle octocat catnip Find all words with at least 1 consecutive \"t\" mike@lfcs:~$ egrep \"t{1,}\" sample.txt cat cut cattle octocat catnip Find all words with at most 2 consecutive \"t\" mike@lfcs:~$ egrep \"t{,2}\" sample.txt ca cat cut cattle octocat catnip Find all words with exactly 2 consecutive \"t\" mike@lfcs:~$ egrep \"t{2}\" sample.txt cattle Find words matching either \"cat\" or \"cut\" mike@lfcs:~$ egrep \"cat|cut\" sample.txt cat cut cattle octocat catnip Find words matching either \"cat\" or \"cut\" mike@lfcs:~$ egrep \"c[a,u]t\" sample.txt cat cut cattle octocat catnip Find all http links, excluding https: egrep \"http[^s]\" file.txt","title":"Examples"},{"location":"Topics/Essential_Commands/Archive%2C%20backup%2C%20compress%2C%20unpack%2C%20and%20uncompress%20files/","text":"Archive, backup, compress, unpack, and uncompress files Backup Workflow: archive -> compress -> copy to backup location Restore Workflow: copy from backup location -> uncompress -> unpack Archiving && Unpacking Create an archive List files in an archive Synopsis : tar --list --file archive.tar # or tar -tf archive.tar # or tar tf archive.tar Archiving a file/directory Synopsis : tar --create --file archive.tar file1 # or tar cf archive.tar file1 Examples : Archiving a file mike@lfcs:~$ ls file1 file2 file3 file4 file5 file6 file7 file8 file9 mike@lfcs:~$ tar --create --file file1.tar file1 mike@lfcs:~$ ls file1 file1.tar file2 file3 file4 file5 file6 file7 file8 file9 mike@lfcs:~$ tar --list --file file1.tar file1 Archiving a directory mike@lfcs:~$ ls files mike@lfcs:~$ ls files/ file1 file2 file3 file4 file5 file6 file7 file8 file9 mike@lfcs:~$ tar --create --file files.tar files/ mike@lfcs:~$ ls files files.tar mike@lfcs:~$ tar --list --file files.tar files/ files/file3 files/file4 files/file8 files/file6 files/file5 files/file1 files/file7 files/file9 files/file2 Adding another file to an already existing archive Synopsis : tar --append --file archive.tar file2 # or tar rf archive.tar file2 Examples : mike@lfcs:~$ ls file1 file2 file3 file4 file5 file6 file7 file8 file9 files.tar mike@lfcs:~$ tar --list --file files.tar file1 mike@lfcs:~$ tar --append --file files.tar file2 mike@lfcs:~$ tar --list --file files.tar file1 file2 Unpack an archive Synopsis : tar --extract --file archive.tar # or tar xf archive.tar Unpack an archive in a given directory Synopsis : tar --extract --file archive.tar --directory /tmp/ # or tar xf archive.tar -C /tmp/ Compress && Uncompress gzip Compress the file and remove the original Synopsis : gzip <filename> Examples : mike@lfcs:~$ gzip file1 mike@lfcs:~$ ls file1.gz file2 file3 file4 file5 file6 file7 file8 file9 Compress the file and keep the original Synopsis : gzip --keep <filename> gzip -k <filename> Examples : mike@lfcs:~$ ls file1.gz file2 file3 file4 file5 file6 file7 file8 file9 mike@lfcs:~$ gzip file2 --keep mike@lfcs:~$ ls file1.gz file2 file2.gz file3 file4 file5 file6 file7 file8 file9 List compressed file contents Synopsis : gzip --list archive.gz gzip -l archive.gz Examples : mike@lfcs:~$ ls file1.gz file2 file2.gz file3 file4 file5 file6 file7 file8 file9 mike@lfcs:~$ gzip --list file2.gz compressed uncompressed ratio uncompressed_name 26 0 0.0% file2 Uncompress the file Synopsis : gzip --decompress archive.gz gzip -d archive.gz gunzip archive.gz Examples : mike@lfcs:~$ ls file1.gz file2 file2.gz file3 file4 file5 file6 file7 file8 file9 mike@lfcs:~$ gunzip file1.gz mike@lfcs:~$ ls file1 file2 file2.gz file3 file4 file5 file6 file7 file8 file9 bzip2 Compress the file and remove the original Synopsis : bzip2 <filename> Examples : mike@lfcs:~$ bzip2 file1 mike@lfcs:~$ ls file1.bz2 file2 file3 file4 file5 file6 file7 file8 file9 Compress the file and keep the original Synopsis : bzip2 --keep <filename> bzip2 -k <filename> Examples : mike@lfcs:~$ ls file1.bz2 file2 file3 file4 file5 file6 file7 file8 file9 mike@lfcs:~$ bzip2 file2 --keep mike@lfcs:~$ ls file1.bz2 file2 file2.bz2 file3 file4 file5 file6 file7 file8 file9 Uncompress the file Synopsis : bzip2 --decompress <filename>.bz2 bzip2 -d <filename>.bz2 bunzip <filename>.bz2 Examples : mike@lfcs:~$ ls file1.bz2 file2 file2.bz2 file3 file4 file5 file6 file7 file8 file9 mike@lfcs:~$ bunzip file1.bz2 mike@lfcs:~$ ls file1 file2 file2.bz2 file3 file4 file5 file6 file7 file8 file9 xz Compress the file and remove the original Synopsis : xz <filename> Examples : mike@lfcs:~$ ls file1 file2 file3 file4 file5 file6 file7 file8 file9 mike@lfcs:~$ xz file1 mike@lfcs:~$ ls file1.xz file2 file3 file4 file5 file6 file7 file8 file9 Compress the file and keep the original Synopsis : xz --keep <filename> xz -k <filename> Examples : mike@lfcs:~$ ls file1.xz file2 file3 file4 file5 file6 file7 file8 file9 mike@lfcs:~$ xz file2 --keep mike@lfcs:~$ ls file1.xz file2 file2.xz file3 file4 file5 file6 file7 file8 file9 List compressed file contents Synopsis : xz --list <filename>.xz xz -l <filename>.xz Examples : mike@lfcs:~$ ls file1.xz file2 file2.xz file3 file4 file5 file6 file7 file8 file9 mike@lfcs:~$ xz --list file1.xz Strms Blocks Compressed Uncompressed Ratio Check Filename 1 0 32 B 0 B --- CRC64 file1.xz Uncompress the file Synopsis : xz --decompress <filename>.xz xz -d <filename>.xz unxz <filename>.xz Examples : mike@lfcs:~$ ls file1.xz file2 file2.xz file3 file4 file5 file6 file7 file8 file9 mike@lfcs:~$ unxz file1.xz mike@lfcs:~$ ls file1 file2 file2.xz file3 file4 file5 file6 file7 file8 file9 zip Compress the file Synopsis : zip <filename>.zip <filename> Examples : mike@lfcs:~$ ls file1 file2 file3 file4 file5 file6 file7 file8 file9 mike@lfcs:~$ zip file1.zip file1 adding: file1 (stored 0%) mike@lfcs:~$ ls file1 file1.zip file2 file3 file4 file5 file6 file7 file8 file9 Compress the directory Synopsis : zip -r <dirname>.zip <dirname>/ Examples : mike@lfcs:~$ ls files mike@lfcs:~$ ls files/ file1 file2 file3 file4 file5 file6 file7 file8 file9 mike@lfcs:~$ zip -r files.zip files/ adding: files/ (stored 0%) adding: files/file3 (stored 0%) adding: files/file4 (stored 0%) adding: files/file8 (stored 0%) adding: files/file6 (stored 0%) adding: files/file5 (stored 0%) adding: files/file1 (stored 0%) adding: files/file7 (stored 0%) adding: files/file9 (stored 0%) adding: files/file2 (stored 0%) mike@lfcs:~$ ls files files.zip Uncompress the file Synopsis : unzip archive.zip Examples : mike@lfcs:~$ ls files.zip mike@lfcs:~$ unzip files.zip Archive: files.zip creating: files/ extracting: files/file3 extracting: files/file4 extracting: files/file8 extracting: files/file6 extracting: files/file5 extracting: files/file1 extracting: files/file7 extracting: files/file9 extracting: files/file2 mike@lfcs:~$ ls files files.zip mike@lfcs:~$ ls files file1 file2 file3 file4 file5 file6 file7 file8 file9 Main differences While `zip` can compress directories directly, `gzip`, `bzip2` and `xz` cannot. As such, they are used together with `tar` to archive and then compress. Helpful one-liners: - Archive and gzip bash tar --create --gzip --file archive.tar.gz file1 tar czf archive.tar.gz file1 Archive and bzip bash tar --create --bzip2 --file archive.tar.bz2 file1 tar cjf archive.tar.bz2 file1 Archive and xz bash tar --create --xz --file archive.tar.xz file1 tar cJf archive.tar.xz file1 Archive and auto compress bash tar --create --autocompress --file archive.tar.gz file1 tar caf archive.tar.gz file1 Unarchive and uncompress tar --extract --file archive.tar.gz tar xf archive.tar.gz Backup Backing up files and directories FROM local TO local rsync -a /path/to/source/ /path/to/dest/ FROM local TO remote rsync -a /path/to/local/ username@ip:/path/to/remote/ FROM remote TO remote rsync -a username1@ip1:/path/to/source/ username2@ip2:/path/to/dest/ Backing up partitions Back up /dev/sda partition to a diskimage.raw file dd if=/dev/sda of=diskimage.raw bs==1M status=progress Restore diskimage.raw to /dev/sda dd if=diskimage.raw of=/dev/sda bs==1M status=progress","title":"Archive, backup, compress, unpack, and uncompress files"},{"location":"Topics/Essential_Commands/Archive%2C%20backup%2C%20compress%2C%20unpack%2C%20and%20uncompress%20files/#archive-backup-compress-unpack-and-uncompress-files","text":"Backup Workflow: archive -> compress -> copy to backup location Restore Workflow: copy from backup location -> uncompress -> unpack","title":"Archive, backup, compress, unpack, and uncompress files"},{"location":"Topics/Essential_Commands/Archive%2C%20backup%2C%20compress%2C%20unpack%2C%20and%20uncompress%20files/#archiving-unpacking","text":"","title":"Archiving &amp;&amp; Unpacking"},{"location":"Topics/Essential_Commands/Archive%2C%20backup%2C%20compress%2C%20unpack%2C%20and%20uncompress%20files/#create-an-archive","text":"","title":"Create an archive"},{"location":"Topics/Essential_Commands/Archive%2C%20backup%2C%20compress%2C%20unpack%2C%20and%20uncompress%20files/#list-files-in-an-archive","text":"Synopsis : tar --list --file archive.tar # or tar -tf archive.tar # or tar tf archive.tar","title":"List files in an archive"},{"location":"Topics/Essential_Commands/Archive%2C%20backup%2C%20compress%2C%20unpack%2C%20and%20uncompress%20files/#archiving-a-filedirectory","text":"Synopsis : tar --create --file archive.tar file1 # or tar cf archive.tar file1 Examples : Archiving a file mike@lfcs:~$ ls file1 file2 file3 file4 file5 file6 file7 file8 file9 mike@lfcs:~$ tar --create --file file1.tar file1 mike@lfcs:~$ ls file1 file1.tar file2 file3 file4 file5 file6 file7 file8 file9 mike@lfcs:~$ tar --list --file file1.tar file1 Archiving a directory mike@lfcs:~$ ls files mike@lfcs:~$ ls files/ file1 file2 file3 file4 file5 file6 file7 file8 file9 mike@lfcs:~$ tar --create --file files.tar files/ mike@lfcs:~$ ls files files.tar mike@lfcs:~$ tar --list --file files.tar files/ files/file3 files/file4 files/file8 files/file6 files/file5 files/file1 files/file7 files/file9 files/file2","title":"Archiving a file/directory"},{"location":"Topics/Essential_Commands/Archive%2C%20backup%2C%20compress%2C%20unpack%2C%20and%20uncompress%20files/#adding-another-file-to-an-already-existing-archive","text":"Synopsis : tar --append --file archive.tar file2 # or tar rf archive.tar file2 Examples : mike@lfcs:~$ ls file1 file2 file3 file4 file5 file6 file7 file8 file9 files.tar mike@lfcs:~$ tar --list --file files.tar file1 mike@lfcs:~$ tar --append --file files.tar file2 mike@lfcs:~$ tar --list --file files.tar file1 file2","title":"Adding another file to an already existing archive"},{"location":"Topics/Essential_Commands/Archive%2C%20backup%2C%20compress%2C%20unpack%2C%20and%20uncompress%20files/#unpack-an-archive","text":"Synopsis : tar --extract --file archive.tar # or tar xf archive.tar","title":"Unpack an archive"},{"location":"Topics/Essential_Commands/Archive%2C%20backup%2C%20compress%2C%20unpack%2C%20and%20uncompress%20files/#unpack-an-archive-in-a-given-directory","text":"Synopsis : tar --extract --file archive.tar --directory /tmp/ # or tar xf archive.tar -C /tmp/","title":"Unpack an archive in a given directory"},{"location":"Topics/Essential_Commands/Archive%2C%20backup%2C%20compress%2C%20unpack%2C%20and%20uncompress%20files/#compress-uncompress","text":"","title":"Compress &amp;&amp; Uncompress"},{"location":"Topics/Essential_Commands/Archive%2C%20backup%2C%20compress%2C%20unpack%2C%20and%20uncompress%20files/#gzip","text":"","title":"gzip"},{"location":"Topics/Essential_Commands/Archive%2C%20backup%2C%20compress%2C%20unpack%2C%20and%20uncompress%20files/#compress-the-file-and-remove-the-original","text":"Synopsis : gzip <filename> Examples : mike@lfcs:~$ gzip file1 mike@lfcs:~$ ls file1.gz file2 file3 file4 file5 file6 file7 file8 file9","title":"Compress the file and remove the original"},{"location":"Topics/Essential_Commands/Archive%2C%20backup%2C%20compress%2C%20unpack%2C%20and%20uncompress%20files/#compress-the-file-and-keep-the-original","text":"Synopsis : gzip --keep <filename> gzip -k <filename> Examples : mike@lfcs:~$ ls file1.gz file2 file3 file4 file5 file6 file7 file8 file9 mike@lfcs:~$ gzip file2 --keep mike@lfcs:~$ ls file1.gz file2 file2.gz file3 file4 file5 file6 file7 file8 file9","title":"Compress the file and keep the original"},{"location":"Topics/Essential_Commands/Archive%2C%20backup%2C%20compress%2C%20unpack%2C%20and%20uncompress%20files/#list-compressed-file-contents","text":"Synopsis : gzip --list archive.gz gzip -l archive.gz Examples : mike@lfcs:~$ ls file1.gz file2 file2.gz file3 file4 file5 file6 file7 file8 file9 mike@lfcs:~$ gzip --list file2.gz compressed uncompressed ratio uncompressed_name 26 0 0.0% file2","title":"List compressed file contents"},{"location":"Topics/Essential_Commands/Archive%2C%20backup%2C%20compress%2C%20unpack%2C%20and%20uncompress%20files/#uncompress-the-file","text":"Synopsis : gzip --decompress archive.gz gzip -d archive.gz gunzip archive.gz Examples : mike@lfcs:~$ ls file1.gz file2 file2.gz file3 file4 file5 file6 file7 file8 file9 mike@lfcs:~$ gunzip file1.gz mike@lfcs:~$ ls file1 file2 file2.gz file3 file4 file5 file6 file7 file8 file9","title":"Uncompress the file"},{"location":"Topics/Essential_Commands/Archive%2C%20backup%2C%20compress%2C%20unpack%2C%20and%20uncompress%20files/#bzip2","text":"","title":"bzip2"},{"location":"Topics/Essential_Commands/Archive%2C%20backup%2C%20compress%2C%20unpack%2C%20and%20uncompress%20files/#compress-the-file-and-remove-the-original_1","text":"Synopsis : bzip2 <filename> Examples : mike@lfcs:~$ bzip2 file1 mike@lfcs:~$ ls file1.bz2 file2 file3 file4 file5 file6 file7 file8 file9","title":"Compress the file and remove the original"},{"location":"Topics/Essential_Commands/Archive%2C%20backup%2C%20compress%2C%20unpack%2C%20and%20uncompress%20files/#compress-the-file-and-keep-the-original_1","text":"Synopsis : bzip2 --keep <filename> bzip2 -k <filename> Examples : mike@lfcs:~$ ls file1.bz2 file2 file3 file4 file5 file6 file7 file8 file9 mike@lfcs:~$ bzip2 file2 --keep mike@lfcs:~$ ls file1.bz2 file2 file2.bz2 file3 file4 file5 file6 file7 file8 file9","title":"Compress the file and keep the original"},{"location":"Topics/Essential_Commands/Archive%2C%20backup%2C%20compress%2C%20unpack%2C%20and%20uncompress%20files/#uncompress-the-file_1","text":"Synopsis : bzip2 --decompress <filename>.bz2 bzip2 -d <filename>.bz2 bunzip <filename>.bz2 Examples : mike@lfcs:~$ ls file1.bz2 file2 file2.bz2 file3 file4 file5 file6 file7 file8 file9 mike@lfcs:~$ bunzip file1.bz2 mike@lfcs:~$ ls file1 file2 file2.bz2 file3 file4 file5 file6 file7 file8 file9","title":"Uncompress the file"},{"location":"Topics/Essential_Commands/Archive%2C%20backup%2C%20compress%2C%20unpack%2C%20and%20uncompress%20files/#xz","text":"","title":"xz"},{"location":"Topics/Essential_Commands/Archive%2C%20backup%2C%20compress%2C%20unpack%2C%20and%20uncompress%20files/#compress-the-file-and-remove-the-original_2","text":"Synopsis : xz <filename> Examples : mike@lfcs:~$ ls file1 file2 file3 file4 file5 file6 file7 file8 file9 mike@lfcs:~$ xz file1 mike@lfcs:~$ ls file1.xz file2 file3 file4 file5 file6 file7 file8 file9","title":"Compress the file and remove the original"},{"location":"Topics/Essential_Commands/Archive%2C%20backup%2C%20compress%2C%20unpack%2C%20and%20uncompress%20files/#compress-the-file-and-keep-the-original_2","text":"Synopsis : xz --keep <filename> xz -k <filename> Examples : mike@lfcs:~$ ls file1.xz file2 file3 file4 file5 file6 file7 file8 file9 mike@lfcs:~$ xz file2 --keep mike@lfcs:~$ ls file1.xz file2 file2.xz file3 file4 file5 file6 file7 file8 file9","title":"Compress the file and keep the original"},{"location":"Topics/Essential_Commands/Archive%2C%20backup%2C%20compress%2C%20unpack%2C%20and%20uncompress%20files/#list-compressed-file-contents_1","text":"Synopsis : xz --list <filename>.xz xz -l <filename>.xz Examples : mike@lfcs:~$ ls file1.xz file2 file2.xz file3 file4 file5 file6 file7 file8 file9 mike@lfcs:~$ xz --list file1.xz Strms Blocks Compressed Uncompressed Ratio Check Filename 1 0 32 B 0 B --- CRC64 file1.xz","title":"List compressed file contents"},{"location":"Topics/Essential_Commands/Archive%2C%20backup%2C%20compress%2C%20unpack%2C%20and%20uncompress%20files/#uncompress-the-file_2","text":"Synopsis : xz --decompress <filename>.xz xz -d <filename>.xz unxz <filename>.xz Examples : mike@lfcs:~$ ls file1.xz file2 file2.xz file3 file4 file5 file6 file7 file8 file9 mike@lfcs:~$ unxz file1.xz mike@lfcs:~$ ls file1 file2 file2.xz file3 file4 file5 file6 file7 file8 file9","title":"Uncompress the file"},{"location":"Topics/Essential_Commands/Archive%2C%20backup%2C%20compress%2C%20unpack%2C%20and%20uncompress%20files/#zip","text":"","title":"zip"},{"location":"Topics/Essential_Commands/Archive%2C%20backup%2C%20compress%2C%20unpack%2C%20and%20uncompress%20files/#compress-the-file","text":"Synopsis : zip <filename>.zip <filename> Examples : mike@lfcs:~$ ls file1 file2 file3 file4 file5 file6 file7 file8 file9 mike@lfcs:~$ zip file1.zip file1 adding: file1 (stored 0%) mike@lfcs:~$ ls file1 file1.zip file2 file3 file4 file5 file6 file7 file8 file9","title":"Compress the file"},{"location":"Topics/Essential_Commands/Archive%2C%20backup%2C%20compress%2C%20unpack%2C%20and%20uncompress%20files/#compress-the-directory","text":"Synopsis : zip -r <dirname>.zip <dirname>/ Examples : mike@lfcs:~$ ls files mike@lfcs:~$ ls files/ file1 file2 file3 file4 file5 file6 file7 file8 file9 mike@lfcs:~$ zip -r files.zip files/ adding: files/ (stored 0%) adding: files/file3 (stored 0%) adding: files/file4 (stored 0%) adding: files/file8 (stored 0%) adding: files/file6 (stored 0%) adding: files/file5 (stored 0%) adding: files/file1 (stored 0%) adding: files/file7 (stored 0%) adding: files/file9 (stored 0%) adding: files/file2 (stored 0%) mike@lfcs:~$ ls files files.zip","title":"Compress the directory"},{"location":"Topics/Essential_Commands/Archive%2C%20backup%2C%20compress%2C%20unpack%2C%20and%20uncompress%20files/#uncompress-the-file_3","text":"Synopsis : unzip archive.zip Examples : mike@lfcs:~$ ls files.zip mike@lfcs:~$ unzip files.zip Archive: files.zip creating: files/ extracting: files/file3 extracting: files/file4 extracting: files/file8 extracting: files/file6 extracting: files/file5 extracting: files/file1 extracting: files/file7 extracting: files/file9 extracting: files/file2 mike@lfcs:~$ ls files files.zip mike@lfcs:~$ ls files file1 file2 file3 file4 file5 file6 file7 file8 file9","title":"Uncompress the file"},{"location":"Topics/Essential_Commands/Archive%2C%20backup%2C%20compress%2C%20unpack%2C%20and%20uncompress%20files/#main-differences","text":"While `zip` can compress directories directly, `gzip`, `bzip2` and `xz` cannot. As such, they are used together with `tar` to archive and then compress. Helpful one-liners: - Archive and gzip bash tar --create --gzip --file archive.tar.gz file1 tar czf archive.tar.gz file1 Archive and bzip bash tar --create --bzip2 --file archive.tar.bz2 file1 tar cjf archive.tar.bz2 file1 Archive and xz bash tar --create --xz --file archive.tar.xz file1 tar cJf archive.tar.xz file1 Archive and auto compress bash tar --create --autocompress --file archive.tar.gz file1 tar caf archive.tar.gz file1 Unarchive and uncompress tar --extract --file archive.tar.gz tar xf archive.tar.gz","title":"Main differences"},{"location":"Topics/Essential_Commands/Archive%2C%20backup%2C%20compress%2C%20unpack%2C%20and%20uncompress%20files/#backup","text":"","title":"Backup"},{"location":"Topics/Essential_Commands/Archive%2C%20backup%2C%20compress%2C%20unpack%2C%20and%20uncompress%20files/#backing-up-files-and-directories","text":"FROM local TO local rsync -a /path/to/source/ /path/to/dest/ FROM local TO remote rsync -a /path/to/local/ username@ip:/path/to/remote/ FROM remote TO remote rsync -a username1@ip1:/path/to/source/ username2@ip2:/path/to/dest/","title":"Backing up files and directories"},{"location":"Topics/Essential_Commands/Archive%2C%20backup%2C%20compress%2C%20unpack%2C%20and%20uncompress%20files/#backing-up-partitions","text":"Back up /dev/sda partition to a diskimage.raw file dd if=/dev/sda of=diskimage.raw bs==1M status=progress Restore diskimage.raw to /dev/sda dd if=diskimage.raw of=/dev/sda bs==1M status=progress","title":"Backing up partitions"},{"location":"Topics/Essential_Commands/Compare%20and%20manipulate%20file%20content/","text":"Manipulating file contents Printing file contents Start to finish bash cat <filename> Finish to start bash tac <filename> Last N lines of a file bash tail -n <N> <filename> First N lines of a file bash head -n <N> <filename> Paginating through a large file bash less <filename> Find and Replace First occurence bash sed 's/<old>/<new>/' <filename> # will print output to stdout All occurences bash sed 's/<old>/<new>/g' <filename> # will print output to stdout In place bash sed -i 's/<old>/<new>/' <filename> sed --in-place 's/<old>/<new>/' <filename> Extract specific sections Column X of a file bash cut -d ',' -f <X> <filename> # for comma-separated-values cut -d ' ' -f <X> <filename> # for space-separated values All lines, sorted bash sort <filename> Removed consecutive duplicates bash uniq <filename> Note: Only remove CONSECUTIVE duplicates, not ALL duplicates Only unique lines bash sort <filename> | uniq Comparing files \"traditional\" bash diff <file1> <file2> side by side bash sdiff <file1> <file2> Searching files grep [options] [search_pattern] [file] Search case sensitive mike@lfcs:~/LFCS-Study-Guide$ grep 'study' README.md LFCS-study-guide An obsidian vault I created while studying for the LFCS Certification. Search case insensitive mike@lfcs:~/LFCS-Study-Guide$ grep 'lfcs' README.md mike@lfcs:~/LFCS-Study-Guide$ grep -i 'lfcs' README.md LFCS-study-guide An obsidian vault I created while studying for the LFCS Certification. mike@lfcs:~/LFCS-Study-Guide$ Search all files in directory mike@lfcs:~/LFCS-Study-Guide$ grep \"Manipulating file contents\" -r ./ ./Notes/Topics/Essential Commands/Compare and manipulate file content.md:# Manipulating file contents Invert search query mike@lfcs:~/LFCS-Study-Guide$ grep -vi 'lfcs' README.md ================ ![mindmap](mindmap.png) Only print matching mike@lfcs:~/LFCS-Study-Guide$ grep -oi 'lfcs' README.md LFCS LFCS","title":"Compare and manipulate file content"},{"location":"Topics/Essential_Commands/Compare%20and%20manipulate%20file%20content/#manipulating-file-contents","text":"","title":"Manipulating file contents"},{"location":"Topics/Essential_Commands/Compare%20and%20manipulate%20file%20content/#printing-file-contents","text":"Start to finish bash cat <filename> Finish to start bash tac <filename> Last N lines of a file bash tail -n <N> <filename> First N lines of a file bash head -n <N> <filename> Paginating through a large file bash less <filename>","title":"Printing file contents"},{"location":"Topics/Essential_Commands/Compare%20and%20manipulate%20file%20content/#find-and-replace","text":"First occurence bash sed 's/<old>/<new>/' <filename> # will print output to stdout All occurences bash sed 's/<old>/<new>/g' <filename> # will print output to stdout In place bash sed -i 's/<old>/<new>/' <filename> sed --in-place 's/<old>/<new>/' <filename>","title":"Find and Replace"},{"location":"Topics/Essential_Commands/Compare%20and%20manipulate%20file%20content/#extract-specific-sections","text":"Column X of a file bash cut -d ',' -f <X> <filename> # for comma-separated-values cut -d ' ' -f <X> <filename> # for space-separated values All lines, sorted bash sort <filename> Removed consecutive duplicates bash uniq <filename> Note: Only remove CONSECUTIVE duplicates, not ALL duplicates Only unique lines bash sort <filename> | uniq","title":"Extract specific sections"},{"location":"Topics/Essential_Commands/Compare%20and%20manipulate%20file%20content/#comparing-files","text":"\"traditional\" bash diff <file1> <file2> side by side bash sdiff <file1> <file2>","title":"Comparing files"},{"location":"Topics/Essential_Commands/Compare%20and%20manipulate%20file%20content/#searching-files","text":"grep [options] [search_pattern] [file] Search case sensitive mike@lfcs:~/LFCS-Study-Guide$ grep 'study' README.md LFCS-study-guide An obsidian vault I created while studying for the LFCS Certification. Search case insensitive mike@lfcs:~/LFCS-Study-Guide$ grep 'lfcs' README.md mike@lfcs:~/LFCS-Study-Guide$ grep -i 'lfcs' README.md LFCS-study-guide An obsidian vault I created while studying for the LFCS Certification. mike@lfcs:~/LFCS-Study-Guide$ Search all files in directory mike@lfcs:~/LFCS-Study-Guide$ grep \"Manipulating file contents\" -r ./ ./Notes/Topics/Essential Commands/Compare and manipulate file content.md:# Manipulating file contents Invert search query mike@lfcs:~/LFCS-Study-Guide$ grep -vi 'lfcs' README.md ================ ![mindmap](mindmap.png) Only print matching mike@lfcs:~/LFCS-Study-Guide$ grep -oi 'lfcs' README.md LFCS LFCS","title":"Searching files"},{"location":"Topics/Essential_Commands/Create%20and%20manage%20hard%20and%20soft%20links/","text":"Create and manage hard and soft links Hard Links Hard links are another file instance referencing the same inode as the original file. Basically, they are two files pointing to the same data on disk. The actual data on disk does not get removed unless ALL THE LINKS are removed. Creating a hard link ln /path/to/file /path/to/hardlink Limitations only files can be hard linked, not directories only files on the same fielsystem can be linked Soft Links Soft links are basically like a shortcut in windows. They reference the path to another file specified at link creation. As opposed to Hard Links, which point to the inode, the soft link points to the original file which in turn points to the inode. ln -s /path/to/file /path/to/softlink","title":"Create and manage hard and soft links"},{"location":"Topics/Essential_Commands/Create%20and%20manage%20hard%20and%20soft%20links/#create-and-manage-hard-and-soft-links","text":"","title":"Create and manage hard and soft links"},{"location":"Topics/Essential_Commands/Create%20and%20manage%20hard%20and%20soft%20links/#hard-links","text":"Hard links are another file instance referencing the same inode as the original file. Basically, they are two files pointing to the same data on disk. The actual data on disk does not get removed unless ALL THE LINKS are removed.","title":"Hard Links"},{"location":"Topics/Essential_Commands/Create%20and%20manage%20hard%20and%20soft%20links/#creating-a-hard-link","text":"ln /path/to/file /path/to/hardlink","title":"Creating a hard link"},{"location":"Topics/Essential_Commands/Create%20and%20manage%20hard%20and%20soft%20links/#limitations","text":"only files can be hard linked, not directories only files on the same fielsystem can be linked","title":"Limitations"},{"location":"Topics/Essential_Commands/Create%20and%20manage%20hard%20and%20soft%20links/#soft-links","text":"Soft links are basically like a shortcut in windows. They reference the path to another file specified at link creation. As opposed to Hard Links, which point to the inode, the soft link points to the original file which in turn points to the inode. ln -s /path/to/file /path/to/softlink","title":"Soft Links"},{"location":"Topics/Essential_Commands/Create%2C%20delete%2C%20copy%2C%20and%20move%20files%20and%20directories/","text":"Create, delete, copy, and move files and directories Managing files Listing directory contents Regular listing mike@lfcs:~/files$ ls file1 file2 file3 file4 file5 file6 file7 file8 file9 Show hidden files mike@lfcs:~/files$ ls -a . .. file1 file2 file3 file4 file5 file6 file7 file8 file9 Long listing format mike@lfcs:~/files$ ls -l total 0 -rw-rw-r-- 1 mike mike 0 Oct 11 21:44 file1 -rw-rw-r-- 1 mike mike 0 Oct 11 21:44 file2 -rw-rw-r-- 1 mike mike 0 Oct 11 21:44 file3 -rw-rw-r-- 1 mike mike 0 Oct 11 21:44 file4 -rw-rw-r-- 1 mike mike 0 Oct 11 21:44 file5 -rw-rw-r-- 1 mike mike 0 Oct 11 21:44 file6 -rw-rw-r-- 1 mike mike 0 Oct 11 21:44 file7 -rw-rw-r-- 1 mike mike 0 Oct 11 21:44 file8 -rw-rw-r-- 1 mike mike 0 Oct 11 21:44 file9 Liste xact modified time mike@lfcs:~/files$ ls --full-time total 0 -rw-rw-r-- 1 mike mike 0 2022-10-11 21:44:31.000000000 +0000 file1 -rw-rw-r-- 1 mike mike 0 2022-10-11 21:44:31.000000000 +0000 file2 -rw-rw-r-- 1 mike mike 0 2022-10-11 21:44:31.000000000 +0000 file3 -rw-rw-r-- 1 mike mike 0 2022-10-11 21:44:31.000000000 +0000 file4 -rw-rw-r-- 1 mike mike 0 2022-10-11 21:44:31.000000000 +0000 file5 -rw-rw-r-- 1 mike mike 0 2022-10-11 21:44:31.000000000 +0000 file6 -rw-rw-r-- 1 mike mike 0 2022-10-11 21:44:31.000000000 +0000 file7 -rw-rw-r-- 1 mike mike 0 2022-10-11 21:44:31.000000000 +0000 file8 -rw-rw-r-- 1 mike mike 0 2022-10-11 21:44:31.000000000 +0000 file9 Creating files Examples : Creating an empty file: mike@lfcs:~/files$ ls mike@lfcs:~/files$ touch empty_file mike@lfcs:~/files$ ls empty_file mike@lfcs:~/files$ cat empty_file mike@lfcs:~/files$ Creating a file with some predefined content: mike@lfcs:~/files$ ls empty_file mike@lfcs:~/files$ echo \"some content\" > content_file mike@lfcs:~/files$ ls content_file empty_file mike@lfcs:~/files$ cat content_file some content mike@lfcs:~/files$ Copying files Synopsis : cp [OPTION]... [-T] SOURCE DEST Examples : Regular file copy mike@lfcs:~/files$ ls -l -rw-rw-r-- 1 root root 0 Oct 11 21:50 root_file mike@lfcs:~/files$ cp root_file mike_file mike@lfcs:~/files$ ls -l -rw-rw-r-- 1 mike mike 0 Oct 11 21:50 mike_file -rw-rw-r-- 1 root root 0 Oct 11 21:50 root_file Preserve all file attributes when copying: mike@lfcs:~/files$ ls -l -rw-rw-r-- 1 mike mike 0 Oct 11 21:50 mike_file -rw-rw-r-- 1 root root 0 Oct 11 21:50 root_file mike@lfcs:~/files$ cp --preserve=all root_file mike_file2 mike@lfcs:~/files$ ls -l -rw-rw-r-- 1 mike mike 0 Oct 11 21:50 mike_file -rw-rw-r-- 1 mike mike 0 Oct 11 21:50 mike_file2 -rw-rw-r-- 1 root root 0 Oct 11 21:50 root_file mike@lfcs:~/files$ Moving files Synopsis : mv [OPTION]... [-T] SOURCE DEST Examples : mike@lfcs:~/files$ ls empty_file mike@lfcs:~/files$ mv empty_file new_name_file mike@lfcs:~/files$ ls new_name_file Removing a file Synopsis : rm [OPTION]... [FILE]... Examples : mike@lfcs:~/files$ ls content_file empty_file mike@lfcs:~/files$ rm content_file mike@lfcs:~/files$ ls empty_file Getting information about files Synopsis : stat [OPTION]... FILE... Examples : mike@lfcs:~/files$ stat mike_file File: mike_file Size: 0 Blocks: 0 IO Block: 4096 regular empty file Device: 801h/2049d Inode: 291901 Links: 1 Access: (0664/-rw-rw-r--) Uid: ( 1000/ mike) Gid: ( 1000/ mike) Access: 2022-10-11 21:50:48.463740676 +0000 Modify: 2022-10-11 21:50:48.463740676 +0000 Change: 2022-10-11 21:50:48.463740676 +0000 Birth: 2022-10-11 21:50:48.463740676 +0000 Managing directories Current working directory Synopsis : pwd Examples : mike@lfcs:~$ pwd /home/mike Changing the working directory Synopsis : cd Examples : mike@lfcs:~$ pwd /home/mike mike@lfcs:~$ cd files/ mike@lfcs:~/files$ pwd /home/mike/files Creating directories Synopsis : mkdir [OPTION]... DIRECTORY... mkdir <dirname> If creating a more complex structure, for example if some aditional directories in the given path don't exist, use -p to create them mike@lfcs:~$ tree . 0 directories, 0 files mike@lfcs:~$ mkdir 1/2/3/4/5 mkdir: cannot create directory \u20181/2/3/4/5\u2019: No such file or directory mike@lfcs:~$ mkdir 1/2/3/4/5 -p mike@lfcs:~$ tree . \u2514\u2500\u2500 1 \u2514\u2500\u2500 2 \u2514\u2500\u2500 3 \u2514\u2500\u2500 4 \u2514\u2500\u2500 5 5 directories, 0 files This command won't fail if any of the directories don't exist. Copying directories cp olddir/ newdir/ -r cp olddir/ newdir/ --recursive Moving directories mv olddir/ newdir/ -r mv olddir/ newdir/ --recursive Removing directories rm -r dirname/ rm --recursive dirname/","title":"Create, delete, copy, and move files and directories"},{"location":"Topics/Essential_Commands/Create%2C%20delete%2C%20copy%2C%20and%20move%20files%20and%20directories/#create-delete-copy-and-move-files-and-directories","text":"","title":"Create, delete, copy, and move files and directories"},{"location":"Topics/Essential_Commands/Create%2C%20delete%2C%20copy%2C%20and%20move%20files%20and%20directories/#managing-files","text":"","title":"Managing files"},{"location":"Topics/Essential_Commands/Create%2C%20delete%2C%20copy%2C%20and%20move%20files%20and%20directories/#listing-directory-contents","text":"Regular listing mike@lfcs:~/files$ ls file1 file2 file3 file4 file5 file6 file7 file8 file9 Show hidden files mike@lfcs:~/files$ ls -a . .. file1 file2 file3 file4 file5 file6 file7 file8 file9 Long listing format mike@lfcs:~/files$ ls -l total 0 -rw-rw-r-- 1 mike mike 0 Oct 11 21:44 file1 -rw-rw-r-- 1 mike mike 0 Oct 11 21:44 file2 -rw-rw-r-- 1 mike mike 0 Oct 11 21:44 file3 -rw-rw-r-- 1 mike mike 0 Oct 11 21:44 file4 -rw-rw-r-- 1 mike mike 0 Oct 11 21:44 file5 -rw-rw-r-- 1 mike mike 0 Oct 11 21:44 file6 -rw-rw-r-- 1 mike mike 0 Oct 11 21:44 file7 -rw-rw-r-- 1 mike mike 0 Oct 11 21:44 file8 -rw-rw-r-- 1 mike mike 0 Oct 11 21:44 file9 Liste xact modified time mike@lfcs:~/files$ ls --full-time total 0 -rw-rw-r-- 1 mike mike 0 2022-10-11 21:44:31.000000000 +0000 file1 -rw-rw-r-- 1 mike mike 0 2022-10-11 21:44:31.000000000 +0000 file2 -rw-rw-r-- 1 mike mike 0 2022-10-11 21:44:31.000000000 +0000 file3 -rw-rw-r-- 1 mike mike 0 2022-10-11 21:44:31.000000000 +0000 file4 -rw-rw-r-- 1 mike mike 0 2022-10-11 21:44:31.000000000 +0000 file5 -rw-rw-r-- 1 mike mike 0 2022-10-11 21:44:31.000000000 +0000 file6 -rw-rw-r-- 1 mike mike 0 2022-10-11 21:44:31.000000000 +0000 file7 -rw-rw-r-- 1 mike mike 0 2022-10-11 21:44:31.000000000 +0000 file8 -rw-rw-r-- 1 mike mike 0 2022-10-11 21:44:31.000000000 +0000 file9","title":"Listing directory contents"},{"location":"Topics/Essential_Commands/Create%2C%20delete%2C%20copy%2C%20and%20move%20files%20and%20directories/#creating-files","text":"Examples : Creating an empty file: mike@lfcs:~/files$ ls mike@lfcs:~/files$ touch empty_file mike@lfcs:~/files$ ls empty_file mike@lfcs:~/files$ cat empty_file mike@lfcs:~/files$ Creating a file with some predefined content: mike@lfcs:~/files$ ls empty_file mike@lfcs:~/files$ echo \"some content\" > content_file mike@lfcs:~/files$ ls content_file empty_file mike@lfcs:~/files$ cat content_file some content mike@lfcs:~/files$","title":"Creating files"},{"location":"Topics/Essential_Commands/Create%2C%20delete%2C%20copy%2C%20and%20move%20files%20and%20directories/#copying-files","text":"Synopsis : cp [OPTION]... [-T] SOURCE DEST Examples : Regular file copy mike@lfcs:~/files$ ls -l -rw-rw-r-- 1 root root 0 Oct 11 21:50 root_file mike@lfcs:~/files$ cp root_file mike_file mike@lfcs:~/files$ ls -l -rw-rw-r-- 1 mike mike 0 Oct 11 21:50 mike_file -rw-rw-r-- 1 root root 0 Oct 11 21:50 root_file Preserve all file attributes when copying: mike@lfcs:~/files$ ls -l -rw-rw-r-- 1 mike mike 0 Oct 11 21:50 mike_file -rw-rw-r-- 1 root root 0 Oct 11 21:50 root_file mike@lfcs:~/files$ cp --preserve=all root_file mike_file2 mike@lfcs:~/files$ ls -l -rw-rw-r-- 1 mike mike 0 Oct 11 21:50 mike_file -rw-rw-r-- 1 mike mike 0 Oct 11 21:50 mike_file2 -rw-rw-r-- 1 root root 0 Oct 11 21:50 root_file mike@lfcs:~/files$","title":"Copying files"},{"location":"Topics/Essential_Commands/Create%2C%20delete%2C%20copy%2C%20and%20move%20files%20and%20directories/#moving-files","text":"Synopsis : mv [OPTION]... [-T] SOURCE DEST Examples : mike@lfcs:~/files$ ls empty_file mike@lfcs:~/files$ mv empty_file new_name_file mike@lfcs:~/files$ ls new_name_file","title":"Moving files"},{"location":"Topics/Essential_Commands/Create%2C%20delete%2C%20copy%2C%20and%20move%20files%20and%20directories/#removing-a-file","text":"Synopsis : rm [OPTION]... [FILE]... Examples : mike@lfcs:~/files$ ls content_file empty_file mike@lfcs:~/files$ rm content_file mike@lfcs:~/files$ ls empty_file","title":"Removing a file"},{"location":"Topics/Essential_Commands/Create%2C%20delete%2C%20copy%2C%20and%20move%20files%20and%20directories/#getting-information-about-files","text":"Synopsis : stat [OPTION]... FILE... Examples : mike@lfcs:~/files$ stat mike_file File: mike_file Size: 0 Blocks: 0 IO Block: 4096 regular empty file Device: 801h/2049d Inode: 291901 Links: 1 Access: (0664/-rw-rw-r--) Uid: ( 1000/ mike) Gid: ( 1000/ mike) Access: 2022-10-11 21:50:48.463740676 +0000 Modify: 2022-10-11 21:50:48.463740676 +0000 Change: 2022-10-11 21:50:48.463740676 +0000 Birth: 2022-10-11 21:50:48.463740676 +0000","title":"Getting information about files"},{"location":"Topics/Essential_Commands/Create%2C%20delete%2C%20copy%2C%20and%20move%20files%20and%20directories/#managing-directories","text":"","title":"Managing directories"},{"location":"Topics/Essential_Commands/Create%2C%20delete%2C%20copy%2C%20and%20move%20files%20and%20directories/#current-working-directory","text":"Synopsis : pwd Examples : mike@lfcs:~$ pwd /home/mike","title":"Current working directory"},{"location":"Topics/Essential_Commands/Create%2C%20delete%2C%20copy%2C%20and%20move%20files%20and%20directories/#changing-the-working-directory","text":"Synopsis : cd Examples : mike@lfcs:~$ pwd /home/mike mike@lfcs:~$ cd files/ mike@lfcs:~/files$ pwd /home/mike/files","title":"Changing the working directory"},{"location":"Topics/Essential_Commands/Create%2C%20delete%2C%20copy%2C%20and%20move%20files%20and%20directories/#creating-directories","text":"Synopsis : mkdir [OPTION]... DIRECTORY... mkdir <dirname> If creating a more complex structure, for example if some aditional directories in the given path don't exist, use -p to create them mike@lfcs:~$ tree . 0 directories, 0 files mike@lfcs:~$ mkdir 1/2/3/4/5 mkdir: cannot create directory \u20181/2/3/4/5\u2019: No such file or directory mike@lfcs:~$ mkdir 1/2/3/4/5 -p mike@lfcs:~$ tree . \u2514\u2500\u2500 1 \u2514\u2500\u2500 2 \u2514\u2500\u2500 3 \u2514\u2500\u2500 4 \u2514\u2500\u2500 5 5 directories, 0 files This command won't fail if any of the directories don't exist.","title":"Creating directories"},{"location":"Topics/Essential_Commands/Create%2C%20delete%2C%20copy%2C%20and%20move%20files%20and%20directories/#copying-directories","text":"cp olddir/ newdir/ -r cp olddir/ newdir/ --recursive","title":"Copying directories"},{"location":"Topics/Essential_Commands/Create%2C%20delete%2C%20copy%2C%20and%20move%20files%20and%20directories/#moving-directories","text":"mv olddir/ newdir/ -r mv olddir/ newdir/ --recursive","title":"Moving directories"},{"location":"Topics/Essential_Commands/Create%2C%20delete%2C%20copy%2C%20and%20move%20files%20and%20directories/#removing-directories","text":"rm -r dirname/ rm --recursive dirname/","title":"Removing directories"},{"location":"Topics/Essential_Commands/Input-Output%20redirection/","text":"Input-Output redirection Redirect ALL output from a command to a file command1 > file.txt # overwrite command1 >> file.txt # append Redirect stdout to a file command1 1> file.txt command1 1>> file.txt Redirect stderr to a file command1 2> file.txt command1 2>> file.txt Redirect stderr to stdout command 1> all_output.txt 2>&1 Redirect file to command input command1 < file.txt Redirect command output to command input source <(kubectl completion bash) Pipe command output to another command cat long_file.txt | more","title":"Input-Output redirection"},{"location":"Topics/Essential_Commands/Input-Output%20redirection/#input-output-redirection","text":"Redirect ALL output from a command to a file command1 > file.txt # overwrite command1 >> file.txt # append Redirect stdout to a file command1 1> file.txt command1 1>> file.txt Redirect stderr to a file command1 2> file.txt command1 2>> file.txt Redirect stderr to stdout command 1> all_output.txt 2>&1 Redirect file to command input command1 < file.txt Redirect command output to command input source <(kubectl completion bash) Pipe command output to another command cat long_file.txt | more","title":"Input-Output redirection"},{"location":"Topics/Essential_Commands/List%2C%20set%2C%20and%20change%20standard%20file%20permissions/","text":"List, set, and change standard file permissions List file permissions and ownership $ ls -l netlify.toml -rw-rw-r-- 1 mike mike 723 Oct 6 19:53 netlify.toml Permission: -rw-rw-r-- user: rw- -> read and write, no execute group: rw- -> read and write, no execute others: r -> read only Ownership: User: mike Group: mike Changing the user:group ownership Change group owner bash chgrp group_name file_name Change user owner bash chown user_name file_name Change both group and user: bash chown user_name:group_name file_name Changing the permissions With octal permission numbers: bash chmod 777 file_name r-- -w- --x rw- r-x -wx rwx 4 2 1 6 5 3 7 With human readable permissions: bash chmod \"u=rwx,g=rwx,o=rwx\" file_name Other examples: Add read permissions to the user/group/other bash chmod u+r file_name #user chmod g+r file_name #group chmod o+r file_name #other Remove read permissions from the user/group/other bash chmod u-r file_name #user chmod g-r file_name #group chmod o-r file_name #other Remove all permissions for the user bash chmod u= file_name chmod u-rwx file_name !Advanced File Permissions","title":"List, set, and change standard file permissions"},{"location":"Topics/Essential_Commands/List%2C%20set%2C%20and%20change%20standard%20file%20permissions/#list-set-and-change-standard-file-permissions","text":"","title":"List, set, and change standard file permissions"},{"location":"Topics/Essential_Commands/List%2C%20set%2C%20and%20change%20standard%20file%20permissions/#list-file-permissions-and-ownership","text":"$ ls -l netlify.toml -rw-rw-r-- 1 mike mike 723 Oct 6 19:53 netlify.toml Permission: -rw-rw-r-- user: rw- -> read and write, no execute group: rw- -> read and write, no execute others: r -> read only Ownership: User: mike Group: mike","title":"List file permissions and ownership"},{"location":"Topics/Essential_Commands/List%2C%20set%2C%20and%20change%20standard%20file%20permissions/#changing-the-usergroup-ownership","text":"Change group owner bash chgrp group_name file_name Change user owner bash chown user_name file_name Change both group and user: bash chown user_name:group_name file_name","title":"Changing the user:group ownership"},{"location":"Topics/Essential_Commands/List%2C%20set%2C%20and%20change%20standard%20file%20permissions/#changing-the-permissions","text":"With octal permission numbers: bash chmod 777 file_name r-- -w- --x rw- r-x -wx rwx 4 2 1 6 5 3 7 With human readable permissions: bash chmod \"u=rwx,g=rwx,o=rwx\" file_name Other examples: Add read permissions to the user/group/other bash chmod u+r file_name #user chmod g+r file_name #group chmod o+r file_name #other Remove read permissions from the user/group/other bash chmod u-r file_name #user chmod g-r file_name #group chmod o-r file_name #other Remove all permissions for the user bash chmod u= file_name chmod u-rwx file_name !Advanced File Permissions","title":"Changing the permissions"},{"location":"Topics/Essential_Commands/Log%20into%20local%20%26%20remote%20graphical%20and%20text%20mode%20consoles/","text":"Log into local & remote graphical and text mode consoles Remote GUI Login Tools VNC RDP Remote text-mode Login Tools SSH Telnet Putty (windows)","title":"Log into local & remote graphical and text mode consoles"},{"location":"Topics/Essential_Commands/Log%20into%20local%20%26%20remote%20graphical%20and%20text%20mode%20consoles/#log-into-local-remote-graphical-and-text-mode-consoles","text":"","title":"Log into local &amp; remote graphical and text mode consoles"},{"location":"Topics/Essential_Commands/Log%20into%20local%20%26%20remote%20graphical%20and%20text%20mode%20consoles/#remote-gui-login-tools","text":"VNC RDP","title":"Remote GUI Login Tools"},{"location":"Topics/Essential_Commands/Log%20into%20local%20%26%20remote%20graphical%20and%20text%20mode%20consoles/#remote-text-mode-login-tools","text":"SSH Telnet Putty (windows)","title":"Remote text-mode Login Tools"},{"location":"Topics/Essential_Commands/Read%2C%20and%20use%20system%20documentation/","text":"Read, and use system documentation If you know what command to use Use the --help flag on most commands Most commands in linux have a -h or --help flag to show some quick reference: $ cat --help Usage: cat [OPTION]... [FILE]... Concatenate FILE(s) to standard output. With no FILE, or when FILE is -, read standard input. -A, --show-all equivalent to -vET -b, --number-nonblank number nonempty output lines, overrides -n -e equivalent to -vE -E, --show-ends display $ at end of each line -n, --number number all output lines -s, --squeeze-blank suppress repeated empty output lines -t equivalent to -vT -T, --show-tabs display TAB characters as ^I -u (ignored) -v, --show-nonprinting use ^ and M- notation, except for LFD and TAB --help display this help and exit --version output version information and exit Examples: cat f - g Output f's contents, then standard input, then g's contents. cat Copy standard input to standard output. Read the man pages man <command> If you don't know what command to use The apropos command can show a list of commands that have the given keyword in their manpages. $ apropos ssh authorized_keys (5) - OpenSSH daemon cryptsetup-ssh (8) - manage LUKS2 SSH token EVP_KDF-SSHKDF (7ssl) - The SSHKDF EVP_KDF implementation git-shell (1) - Restricted login shell for Git-only SSH access rcp (1) - OpenSSH secure file copy rlogin (1) - OpenSSH remote login client rsh (1) - OpenSSH remote login client scp (1) - OpenSSH secure file copy sftp (1) - OpenSSH secure file transfer sftp-server (8) - OpenSSH SFTP server subsystem slogin (1) - OpenSSH remote login client ssh (1) - OpenSSH remote login client ssh-add (1) - adds private key identities to the OpenSSH authentication agent ssh-agent (1) - OpenSSH authentication agent ssh-argv0 (1) - replaces the old ssh command-name as hostname handling ssh-copy-id (1) - use locally available keys to authorise logins on a remote machine ssh-import-id (1) - retrieve one or more public keys from a public keyserver and append them to the current user's authorized_keys file (or some other specified file) ssh-import-id-gh (1) - retrieve one or more public keys from a public keyserver and append them to the current user's authorized_keys file (or some other specified file) ssh-import-id-lp (1) - retrieve one or more public keys from a public keyserver and append them to the current user's authorized_keys file (or some other specified file) ssh-keygen (1) - OpenSSH authentication key utility ssh-keyscan (1) - gather SSH public keys from servers ssh-keysign (8) - OpenSSH helper for host-based authentication ssh-pkcs11-helper (8) - OpenSSH helper for PKCS#11 support ssh-sk-helper (8) - OpenSSH helper for FIDO authenticator support ssh_config (5) - OpenSSH client configuration file sshd (8) - OpenSSH daemon sshd_config (5) - OpenSSH daemon configuration file XtIsShell (3) - obtain and verify a widget's class If the apropos command is not working, refresh the database with sudo mandb","title":"Read, and use system documentation"},{"location":"Topics/Essential_Commands/Read%2C%20and%20use%20system%20documentation/#read-and-use-system-documentation","text":"","title":"Read, and use system documentation"},{"location":"Topics/Essential_Commands/Read%2C%20and%20use%20system%20documentation/#if-you-know-what-command-to-use","text":"","title":"If you know what command to use"},{"location":"Topics/Essential_Commands/Read%2C%20and%20use%20system%20documentation/#use-the-help-flag-on-most-commands","text":"Most commands in linux have a -h or --help flag to show some quick reference: $ cat --help Usage: cat [OPTION]... [FILE]... Concatenate FILE(s) to standard output. With no FILE, or when FILE is -, read standard input. -A, --show-all equivalent to -vET -b, --number-nonblank number nonempty output lines, overrides -n -e equivalent to -vE -E, --show-ends display $ at end of each line -n, --number number all output lines -s, --squeeze-blank suppress repeated empty output lines -t equivalent to -vT -T, --show-tabs display TAB characters as ^I -u (ignored) -v, --show-nonprinting use ^ and M- notation, except for LFD and TAB --help display this help and exit --version output version information and exit Examples: cat f - g Output f's contents, then standard input, then g's contents. cat Copy standard input to standard output.","title":"Use the --help flag on most commands"},{"location":"Topics/Essential_Commands/Read%2C%20and%20use%20system%20documentation/#read-the-man-pages","text":"man <command>","title":"Read the man pages"},{"location":"Topics/Essential_Commands/Read%2C%20and%20use%20system%20documentation/#if-you-dont-know-what-command-to-use","text":"The apropos command can show a list of commands that have the given keyword in their manpages. $ apropos ssh authorized_keys (5) - OpenSSH daemon cryptsetup-ssh (8) - manage LUKS2 SSH token EVP_KDF-SSHKDF (7ssl) - The SSHKDF EVP_KDF implementation git-shell (1) - Restricted login shell for Git-only SSH access rcp (1) - OpenSSH secure file copy rlogin (1) - OpenSSH remote login client rsh (1) - OpenSSH remote login client scp (1) - OpenSSH secure file copy sftp (1) - OpenSSH secure file transfer sftp-server (8) - OpenSSH SFTP server subsystem slogin (1) - OpenSSH remote login client ssh (1) - OpenSSH remote login client ssh-add (1) - adds private key identities to the OpenSSH authentication agent ssh-agent (1) - OpenSSH authentication agent ssh-argv0 (1) - replaces the old ssh command-name as hostname handling ssh-copy-id (1) - use locally available keys to authorise logins on a remote machine ssh-import-id (1) - retrieve one or more public keys from a public keyserver and append them to the current user's authorized_keys file (or some other specified file) ssh-import-id-gh (1) - retrieve one or more public keys from a public keyserver and append them to the current user's authorized_keys file (or some other specified file) ssh-import-id-lp (1) - retrieve one or more public keys from a public keyserver and append them to the current user's authorized_keys file (or some other specified file) ssh-keygen (1) - OpenSSH authentication key utility ssh-keyscan (1) - gather SSH public keys from servers ssh-keysign (8) - OpenSSH helper for host-based authentication ssh-pkcs11-helper (8) - OpenSSH helper for PKCS#11 support ssh-sk-helper (8) - OpenSSH helper for FIDO authenticator support ssh_config (5) - OpenSSH client configuration file sshd (8) - OpenSSH daemon sshd_config (5) - OpenSSH daemon configuration file XtIsShell (3) - obtain and verify a widget's class If the apropos command is not working, refresh the database with sudo mandb","title":"If you don't know what command to use"},{"location":"Topics/Essential_Commands/SGID/","text":"Advanced File Permissions: SGID SGID = Set Group IDentification bit Same as SUID but for the group. Executes the given file with the group of the executing user as the owner group instead of the group of the user that ran the file. Set SGID via octal value mike@lfcs:~/demo$ touch sgid_file mike@lfcs:~/demo$ ls -l total 0 -rw-rw-r-- 1 mike mike 0 Oct 11 21:59 sgid_file mike@lfcs:~/demo$ chmod 2664 sgid_file # <--- this mike@lfcs:~/demo$ ls -l total 0 -rw-rwSr-- 1 mike mike 0 Oct 11 21:59 sgid_file via human-readable format mike@lfcs:~/demo$ touch sgid_file mike@lfcs:~/demo$ ls -l total 0 -rw-rw-r-- 1 mike mike 0 Oct 11 21:59 sgid_file mike@lfcs:~/demo$ chmod g+s sgid_file # <--- this mike@lfcs:~/demo$ ls -l total 0 -rw-rwSr-- 1 mike mike 0 Oct 11 21:59 sgid_file Get SGID ls -l file_name capital s -> SGID set, no execute permission mike@lfcs:~/demo$ chmod g+s sgid_file mike@lfcs:~/demo$ ls -l total 0 -rw-rwSr-- 1 mike mike 0 Oct 11 21:59 sgid_file lowercase s -> SGID set, with execute permission mike@lfcs:~/demo$ chmod g+sx sgid_file mike@lfcs:~/demo$ ls -l total 0 -rw-rwsr-- 1 mike mike 0 Oct 11 21:59 sgid_file","title":"SGID"},{"location":"Topics/Essential_Commands/SGID/#advanced-file-permissions-sgid","text":"SGID = Set Group IDentification bit Same as SUID but for the group. Executes the given file with the group of the executing user as the owner group instead of the group of the user that ran the file.","title":"Advanced File Permissions: SGID"},{"location":"Topics/Essential_Commands/SGID/#set-sgid","text":"via octal value mike@lfcs:~/demo$ touch sgid_file mike@lfcs:~/demo$ ls -l total 0 -rw-rw-r-- 1 mike mike 0 Oct 11 21:59 sgid_file mike@lfcs:~/demo$ chmod 2664 sgid_file # <--- this mike@lfcs:~/demo$ ls -l total 0 -rw-rwSr-- 1 mike mike 0 Oct 11 21:59 sgid_file via human-readable format mike@lfcs:~/demo$ touch sgid_file mike@lfcs:~/demo$ ls -l total 0 -rw-rw-r-- 1 mike mike 0 Oct 11 21:59 sgid_file mike@lfcs:~/demo$ chmod g+s sgid_file # <--- this mike@lfcs:~/demo$ ls -l total 0 -rw-rwSr-- 1 mike mike 0 Oct 11 21:59 sgid_file","title":"Set SGID"},{"location":"Topics/Essential_Commands/SGID/#get-sgid","text":"ls -l file_name capital s -> SGID set, no execute permission mike@lfcs:~/demo$ chmod g+s sgid_file mike@lfcs:~/demo$ ls -l total 0 -rw-rwSr-- 1 mike mike 0 Oct 11 21:59 sgid_file lowercase s -> SGID set, with execute permission mike@lfcs:~/demo$ chmod g+sx sgid_file mike@lfcs:~/demo$ ls -l total 0 -rw-rwsr-- 1 mike mike 0 Oct 11 21:59 sgid_file","title":"Get SGID"},{"location":"Topics/Essential_Commands/SUID/","text":"Advanced File Permissions: SUID SUID = Set User IDentification bit When set, the file is executed, it will be executed as the user owner of the file and not the user that is actually running the file. Set SUID via octal value mike@lfcs:~/demo$ ls -l total 0 -rw-rw-r-- 1 mike mike 0 Oct 11 22:02 suid_file mike@lfcs:~/demo$ chmod 4664 suid_file mike@lfcs:~/demo$ ls -l total 0 -rwSrw-r-- 1 mike mike 0 Oct 11 22:02 suid_file via human-readable value mike@lfcs:~/demo$ ls -l total 0 -rw-rw-r-- 1 mike mike 0 Oct 11 22:02 suid_file mike@lfcs:~/demo$ chmod u+s suid_file mike@lfcs:~/demo$ ls -l total 0 -rwSrw-r-- 1 mike mike 0 Oct 11 22:02 suid_file Get SUID ls -l file_name capital S -> SUID set, no execute permission mike@lfcs:~/demo$ chmod u+s suid_file mike@lfcs:~/demo$ ls -l total 0 -rwSrw-r-- 1 mike mike 0 Oct 11 22:02 suid_file lowercase S -> SUID set, with execute permissions mike@lfcs:~/demo$ chmod u+sx suid_file mike@lfcs:~/demo$ ls -l total 0 -rwsrw-r-- 1 mike mike 0 Oct 11 22:02 suid_file","title":"SUID"},{"location":"Topics/Essential_Commands/SUID/#advanced-file-permissions-suid","text":"SUID = Set User IDentification bit When set, the file is executed, it will be executed as the user owner of the file and not the user that is actually running the file.","title":"Advanced File Permissions: SUID"},{"location":"Topics/Essential_Commands/SUID/#set-suid","text":"via octal value mike@lfcs:~/demo$ ls -l total 0 -rw-rw-r-- 1 mike mike 0 Oct 11 22:02 suid_file mike@lfcs:~/demo$ chmod 4664 suid_file mike@lfcs:~/demo$ ls -l total 0 -rwSrw-r-- 1 mike mike 0 Oct 11 22:02 suid_file via human-readable value mike@lfcs:~/demo$ ls -l total 0 -rw-rw-r-- 1 mike mike 0 Oct 11 22:02 suid_file mike@lfcs:~/demo$ chmod u+s suid_file mike@lfcs:~/demo$ ls -l total 0 -rwSrw-r-- 1 mike mike 0 Oct 11 22:02 suid_file","title":"Set SUID"},{"location":"Topics/Essential_Commands/SUID/#get-suid","text":"ls -l file_name capital S -> SUID set, no execute permission mike@lfcs:~/demo$ chmod u+s suid_file mike@lfcs:~/demo$ ls -l total 0 -rwSrw-r-- 1 mike mike 0 Oct 11 22:02 suid_file lowercase S -> SUID set, with execute permissions mike@lfcs:~/demo$ chmod u+sx suid_file mike@lfcs:~/demo$ ls -l total 0 -rwsrw-r-- 1 mike mike 0 Oct 11 22:02 suid_file","title":"Get SUID"},{"location":"Topics/Essential_Commands/Search%20for%20Files/","text":"Search for files find [path] [parameters] ...by name find . -name file.txt #case sensitive find . -iname file.txt #case insensitive find . -name file* # all files starting with file... ...by modified time Files modified 5 minutes ago bash find . -mmin 5 Files modified in the last 5 minutes bash find . -mmin -5 Find files modified MORE than 5 minutes ago bash find . -mmin +5 Files with permissions changed in the last 5 mintues bash find . -cmin -5 Find files modified in the last 2 days bash find . -mtime 2 ...based on size Search for files larger than 100K bash find . -size +100K Search for files smaller than 100K bash find . -size -100K Search for files exactly 100K bash find . -size 100K ...based on permissions Search for files with EXACTLY the given permissions bash find . -perm 664 find . -perm u=rw,g=rw,o=r Search for files with AT LEAST the given permissions bash find . -perm -664 find . -perm -u=rw,g=rw,o=r Search for files with ANY of the given permissions bash find . -perm /664 find . -perm /u=rw,g=rw,o=r Search for files with SUID set bash find . -perm /4000 find . -perm /u=s Search for files with SGID set bash find . -perm /2000 find . -perm /g=s Search for files with either SUID, SGID or both set bash find . -perm /6000 find . -perm /g+s,u+s Search for directories with Sticky Bit set bash find . -perm /1000 Negating the search condition To negate a search condition, use the -not flag find . -not -name \"file*\" # all files that do not start with \"file...\"","title":"Search for Files"},{"location":"Topics/Essential_Commands/Search%20for%20Files/#search-for-files","text":"find [path] [parameters]","title":"Search for files"},{"location":"Topics/Essential_Commands/Search%20for%20Files/#by-name","text":"find . -name file.txt #case sensitive find . -iname file.txt #case insensitive find . -name file* # all files starting with file...","title":"...by name"},{"location":"Topics/Essential_Commands/Search%20for%20Files/#by-modified-time","text":"Files modified 5 minutes ago bash find . -mmin 5 Files modified in the last 5 minutes bash find . -mmin -5 Find files modified MORE than 5 minutes ago bash find . -mmin +5 Files with permissions changed in the last 5 mintues bash find . -cmin -5 Find files modified in the last 2 days bash find . -mtime 2","title":"...by modified time"},{"location":"Topics/Essential_Commands/Search%20for%20Files/#based-on-size","text":"Search for files larger than 100K bash find . -size +100K Search for files smaller than 100K bash find . -size -100K Search for files exactly 100K bash find . -size 100K","title":"...based on size"},{"location":"Topics/Essential_Commands/Search%20for%20Files/#based-on-permissions","text":"Search for files with EXACTLY the given permissions bash find . -perm 664 find . -perm u=rw,g=rw,o=r Search for files with AT LEAST the given permissions bash find . -perm -664 find . -perm -u=rw,g=rw,o=r Search for files with ANY of the given permissions bash find . -perm /664 find . -perm /u=rw,g=rw,o=r Search for files with SUID set bash find . -perm /4000 find . -perm /u=s Search for files with SGID set bash find . -perm /2000 find . -perm /g=s Search for files with either SUID, SGID or both set bash find . -perm /6000 find . -perm /g+s,u+s Search for directories with Sticky Bit set bash find . -perm /1000","title":"...based on permissions"},{"location":"Topics/Essential_Commands/Search%20for%20Files/#negating-the-search-condition","text":"To negate a search condition, use the -not flag find . -not -name \"file*\" # all files that do not start with \"file...\"","title":"Negating the search condition"},{"location":"Topics/Essential_Commands/Sticky%20Bit/","text":"Advanced File Permissions: Sticky Bit Set on directories, not files. Only allows the user that owns a file inside the directory to remove it. Set Sticky Bit via octal value mike@lfcs:~/demo$ ls -l total 4 drwxrwxr-x 2 mike mike 4096 Oct 11 22:04 sticky_dir mike@lfcs:~/demo$ chmod 1775 sticky_dir/ mike@lfcs:~/demo$ ls -l total 4 drwxrwxr-t 2 mike mike 4096 Oct 11 22:04 sticky_dir via human-readable value mike@lfcs:~/demo$ ls -l total 4 drwxrwxr-x 2 mike mike 4096 Oct 11 22:04 sticky_dir mike@lfcs:~/demo$ chmod +t sticky_dir/ mike@lfcs:~/demo$ ls -l total 4 drwxrwxr-t 2 mike mike 4096 Oct 11 22:04 sticky_dir Get Sticky Bit ls -l dir_name capital T -> Sticky bit set, no execute permission mike@lfcs:~/demo$ chmod +t,o-x sticky_dir/ mike@lfcs:~/demo$ ls -l total 4 drwxrwxr-T 2 mike mike 4096 Oct 11 22:04 sticky_dir lowercase T -> Sticky bit set, with execute permission mike@lfcs:~/demo$ chmod +t sticky_dir/ mike@lfcs:~/demo$ ls -l total 4 drwxrwxr-t 2 mike mike 4096 Oct 11 22:04 sticky_dir","title":"Sticky Bit"},{"location":"Topics/Essential_Commands/Sticky%20Bit/#advanced-file-permissions-sticky-bit","text":"Set on directories, not files. Only allows the user that owns a file inside the directory to remove it.","title":"Advanced File Permissions: Sticky Bit"},{"location":"Topics/Essential_Commands/Sticky%20Bit/#set-sticky-bit","text":"via octal value mike@lfcs:~/demo$ ls -l total 4 drwxrwxr-x 2 mike mike 4096 Oct 11 22:04 sticky_dir mike@lfcs:~/demo$ chmod 1775 sticky_dir/ mike@lfcs:~/demo$ ls -l total 4 drwxrwxr-t 2 mike mike 4096 Oct 11 22:04 sticky_dir via human-readable value mike@lfcs:~/demo$ ls -l total 4 drwxrwxr-x 2 mike mike 4096 Oct 11 22:04 sticky_dir mike@lfcs:~/demo$ chmod +t sticky_dir/ mike@lfcs:~/demo$ ls -l total 4 drwxrwxr-t 2 mike mike 4096 Oct 11 22:04 sticky_dir","title":"Set Sticky Bit"},{"location":"Topics/Essential_Commands/Sticky%20Bit/#get-sticky-bit","text":"ls -l dir_name capital T -> Sticky bit set, no execute permission mike@lfcs:~/demo$ chmod +t,o-x sticky_dir/ mike@lfcs:~/demo$ ls -l total 4 drwxrwxr-T 2 mike mike 4096 Oct 11 22:04 sticky_dir lowercase T -> Sticky bit set, with execute permission mike@lfcs:~/demo$ chmod +t sticky_dir/ mike@lfcs:~/demo$ ls -l total 4 drwxrwxr-t 2 mike mike 4096 Oct 11 22:04 sticky_dir","title":"Get Sticky Bit"},{"location":"Topics/Networking/","text":"Networking Topics Basic Networking Commands Managing Hostname Managing Network Services Managing NTP Managing Routes Managing the Firewall","title":"Index"},{"location":"Topics/Networking/#networking","text":"","title":"Networking"},{"location":"Topics/Networking/#topics","text":"Basic Networking Commands Managing Hostname Managing Network Services Managing NTP Managing Routes Managing the Firewall","title":"Topics"},{"location":"Topics/Networking/Basic%20Networking%20Commands/","text":"Basic Networking Commands Show all network interfaces ip link show ip l Show the IPs for all interfaces ip address show ip a To see dns resolvers cat /etc/resolv.conf Tool to configure networking (set/add IP, set static route etc.) nmtui # TUI -> terminal user interface nmcli # CLI -> command line interface To manually reapply network changes sudo nmcli device reapply <NIC> To initialize a network device at boot time: nmcli connection modify <CONN> autoconnect yes","title":"Basic Networking Commands"},{"location":"Topics/Networking/Basic%20Networking%20Commands/#basic-networking-commands","text":"Show all network interfaces ip link show ip l Show the IPs for all interfaces ip address show ip a To see dns resolvers cat /etc/resolv.conf Tool to configure networking (set/add IP, set static route etc.) nmtui # TUI -> terminal user interface nmcli # CLI -> command line interface To manually reapply network changes sudo nmcli device reapply <NIC> To initialize a network device at boot time: nmcli connection modify <CONN> autoconnect yes","title":"Basic Networking Commands"},{"location":"Topics/Networking/Managing%20Hostname/","text":"Managing Hostname To set custom (local only) hostname resolution, edit the /etc/hosts file: vi /etc/hosts This way, you can refer to other hosts via their hostname instead of ip. To change the local transient-hostname: hostnamectl set-hostname <hostname> # also make sure to edit the /etc/hostname file To make the hostname change permanent: hostname > /etc/hostname","title":"Managing Hostname"},{"location":"Topics/Networking/Managing%20Hostname/#managing-hostname","text":"To set custom (local only) hostname resolution, edit the /etc/hosts file: vi /etc/hosts This way, you can refer to other hosts via their hostname instead of ip. To change the local transient-hostname: hostnamectl set-hostname <hostname> # also make sure to edit the /etc/hostname file To make the hostname change permanent: hostname > /etc/hostname","title":"Managing Hostname"},{"location":"Topics/Networking/Managing%20NTP/","text":"Managing NTP The tool that synchronizes time: chrony daemon. Installing and configuring chrony Set timezone bash sudo timedatectl set-timezone Europe/Bucharest Install chrony bash sudo dnf install chrony Start and enable the server bash sudo systemctl enable --now chronyd Enable ntp bash sudo timedatectl set-ntp true Check if time is synced bash timedatectl Check chrony service status bash sudo systemctl status chronyd Managing the RTC Enabling the RTC sudo timedatectl set-local-rtc true Disabling the RTC sudo timedatectl set-local-rtc false","title":"Managing NTP"},{"location":"Topics/Networking/Managing%20NTP/#managing-ntp","text":"The tool that synchronizes time: chrony daemon.","title":"Managing NTP"},{"location":"Topics/Networking/Managing%20NTP/#installing-and-configuring-chrony","text":"Set timezone bash sudo timedatectl set-timezone Europe/Bucharest Install chrony bash sudo dnf install chrony Start and enable the server bash sudo systemctl enable --now chronyd Enable ntp bash sudo timedatectl set-ntp true Check if time is synced bash timedatectl Check chrony service status bash sudo systemctl status chronyd","title":"Installing and configuring chrony"},{"location":"Topics/Networking/Managing%20NTP/#managing-the-rtc","text":"Enabling the RTC sudo timedatectl set-local-rtc true Disabling the RTC sudo timedatectl set-local-rtc false","title":"Managing the RTC"},{"location":"Topics/Networking/Managing%20Network%20Services/","text":"Managing Network Services NetworkManager The service that configures the network devices is NetworkManager To check if network manager is running: systemctl status NetworkManager.service To install network manager sudo dnf install NetworkManager To enable and start the service sudo systemctl enable --now NetworkManager.service Other services To check for services that are listening on ports: sudo ss -tulnp #recommended # Or sudo netstat -tulnp #older tool, might get deprecated","title":"Managing Network Services"},{"location":"Topics/Networking/Managing%20Network%20Services/#managing-network-services","text":"","title":"Managing Network Services"},{"location":"Topics/Networking/Managing%20Network%20Services/#networkmanager","text":"The service that configures the network devices is NetworkManager To check if network manager is running: systemctl status NetworkManager.service To install network manager sudo dnf install NetworkManager To enable and start the service sudo systemctl enable --now NetworkManager.service","title":"NetworkManager"},{"location":"Topics/Networking/Managing%20Network%20Services/#other-services","text":"To check for services that are listening on ports: sudo ss -tulnp #recommended # Or sudo netstat -tulnp #older tool, might get deprecated","title":"Other services"},{"location":"Topics/Networking/Managing%20Routes/","text":"Managing Routes Show all routes ip route show ip r Making temporary changes to the routing table Add a new route ip route add 192.168.1.0/24 via 10.0.0.13 Add a new route via a specific interface ip route add 192.168.1.0/24 via 10.0.0.13 dev eno1 Remove a route ip route del 192.168.1.0/24 Add a default route (gateway) ip route add default via 192.168.1.0 Delete a default route ip route del default via 192.168.1.0 Making permanent changes to the routing table Either use nmtui and then reload the configuration: sudo nmtui sudo nmcli device reapply eno1 Or issue the nmcli commands directly: Add a route sudo nmcli connection modify eno1 +ipv4.routes \"192.168.1.0/24 10.0.0.13\" sudo nmcli device reapply eno1 Remove a route sudo nmcli connection modify eno1 -ipv4.routes \"192.168.1.0/24 10.0.0.13\" sudo nmcli device reapply eno1","title":"Managing Routes"},{"location":"Topics/Networking/Managing%20Routes/#managing-routes","text":"Show all routes ip route show ip r","title":"Managing Routes"},{"location":"Topics/Networking/Managing%20Routes/#making-temporary-changes-to-the-routing-table","text":"Add a new route ip route add 192.168.1.0/24 via 10.0.0.13 Add a new route via a specific interface ip route add 192.168.1.0/24 via 10.0.0.13 dev eno1 Remove a route ip route del 192.168.1.0/24 Add a default route (gateway) ip route add default via 192.168.1.0 Delete a default route ip route del default via 192.168.1.0","title":"Making temporary changes to the routing table"},{"location":"Topics/Networking/Managing%20Routes/#making-permanent-changes-to-the-routing-table","text":"Either use nmtui and then reload the configuration: sudo nmtui sudo nmcli device reapply eno1 Or issue the nmcli commands directly: Add a route sudo nmcli connection modify eno1 +ipv4.routes \"192.168.1.0/24 10.0.0.13\" sudo nmcli device reapply eno1 Remove a route sudo nmcli connection modify eno1 -ipv4.routes \"192.168.1.0/24 10.0.0.13\" sudo nmcli device reapply eno1","title":"Making permanent changes to the routing table"},{"location":"Topics/Networking/Managing%20the%20Firewall/","text":"Managing the Firewall Installing the firewall sudo dnf install firewalld Managing the firewall Managing the default zone To show the current default firewall-cmd --get-default-zone To set a new default-zone firewall-cmd --set-default-zone=<zone> Managing firewall rules Show all rules firewall-cmd --list-all Show info about a service firewall-cmd --info-service=<service> Add a new rule (to allow http) firewall-cmd --add-service=http firewall-cmd --add-port=80/tcp Remove a rule (to block http) firewall-cmd --remove-service=http firewall-cmd --remove-port=80/tcp Add a block of IPs to a zone firewall-cmd --add-source=10.11.12.0/24 --zone=<zone> List active zones firewall-cmd --get-active-zones Remove a block of IPs from a zone firewall-cmd --remove-source=10.11.12.0/24 --zone=<zone> To make the current setup permanent firewall-cmd --runtime-to-permanent To make a permanent change instantly firewall-cmd [command] --permanent","title":"Managing the Firewall"},{"location":"Topics/Networking/Managing%20the%20Firewall/#managing-the-firewall","text":"","title":"Managing the Firewall"},{"location":"Topics/Networking/Managing%20the%20Firewall/#installing-the-firewall","text":"sudo dnf install firewalld","title":"Installing the firewall"},{"location":"Topics/Networking/Managing%20the%20Firewall/#managing-the-firewall_1","text":"","title":"Managing the firewall"},{"location":"Topics/Networking/Managing%20the%20Firewall/#managing-the-default-zone","text":"To show the current default firewall-cmd --get-default-zone To set a new default-zone firewall-cmd --set-default-zone=<zone>","title":"Managing the default zone"},{"location":"Topics/Networking/Managing%20the%20Firewall/#managing-firewall-rules","text":"Show all rules firewall-cmd --list-all Show info about a service firewall-cmd --info-service=<service> Add a new rule (to allow http) firewall-cmd --add-service=http firewall-cmd --add-port=80/tcp Remove a rule (to block http) firewall-cmd --remove-service=http firewall-cmd --remove-port=80/tcp Add a block of IPs to a zone firewall-cmd --add-source=10.11.12.0/24 --zone=<zone> List active zones firewall-cmd --get-active-zones Remove a block of IPs from a zone firewall-cmd --remove-source=10.11.12.0/24 --zone=<zone> To make the current setup permanent firewall-cmd --runtime-to-permanent To make a permanent change instantly firewall-cmd [command] --permanent","title":"Managing firewall rules"},{"location":"Topics/Operation_of_Running_Systems/","text":"Operation of Running Systems Topics Boot, Reboot and Shutdown Managing Available Resources Managing Bootloaders Managing Kernel Parameters Managing Log Files Managing Processes Managing SELinux Managing Services Managing Software Packages Operating Modes Scheduling Tasks","title":"Index"},{"location":"Topics/Operation_of_Running_Systems/#operation-of-running-systems","text":"","title":"Operation of Running Systems"},{"location":"Topics/Operation_of_Running_Systems/#topics","text":"Boot, Reboot and Shutdown Managing Available Resources Managing Bootloaders Managing Kernel Parameters Managing Log Files Managing Processes Managing SELinux Managing Services Managing Software Packages Operating Modes Scheduling Tasks","title":"Topics"},{"location":"Topics/Operation_of_Running_Systems/Boot%2C%20Reboot%20and%20Shutdown/","text":"Boot, Reboot and Shutdown (Force) (force) reboot or shutdown Rebooting a system sudo systemctl reboot Force rebooting a system (don't give programs a chance to gracefully end) sudo systemctl reboot --force Force restart a system (as if unplugging and replugging the power cord) sudo systemctl reboot --force --force Shut down a system sudo systemctl poweroff Force shut down a system (don't give programs a chance to gracefully end) sudo systemctl poweroff --force Force kill a system (as if unplugging the power cord) sudo systemctl poweroff --force --force Scheduled reboot and/or shut down Schedule a shutdown at 2AM sudo shutdown 02:00 Schedule a shutdown in 20 minutes: sudo shutdown +15 Schedule a reboot in 10 minutes: sudo shutdown -r +10 Reboot with a wall message: sudo shutdown -r +6 'this is the wall message' Cancel a pending shutdown: sudo shutdown -c","title":"Boot, Reboot and Shutdown"},{"location":"Topics/Operation_of_Running_Systems/Boot%2C%20Reboot%20and%20Shutdown/#boot-reboot-and-shutdown","text":"","title":"Boot, Reboot and Shutdown"},{"location":"Topics/Operation_of_Running_Systems/Boot%2C%20Reboot%20and%20Shutdown/#force-force-reboot-or-shutdown","text":"Rebooting a system sudo systemctl reboot Force rebooting a system (don't give programs a chance to gracefully end) sudo systemctl reboot --force Force restart a system (as if unplugging and replugging the power cord) sudo systemctl reboot --force --force Shut down a system sudo systemctl poweroff Force shut down a system (don't give programs a chance to gracefully end) sudo systemctl poweroff --force Force kill a system (as if unplugging the power cord) sudo systemctl poweroff --force --force","title":"(Force) (force) reboot or shutdown"},{"location":"Topics/Operation_of_Running_Systems/Boot%2C%20Reboot%20and%20Shutdown/#scheduled-reboot-andor-shut-down","text":"Schedule a shutdown at 2AM sudo shutdown 02:00 Schedule a shutdown in 20 minutes: sudo shutdown +15 Schedule a reboot in 10 minutes: sudo shutdown -r +10 Reboot with a wall message: sudo shutdown -r +6 'this is the wall message' Cancel a pending shutdown: sudo shutdown -c","title":"Scheduled reboot and/or shut down"},{"location":"Topics/Operation_of_Running_Systems/Managing%20Available%20Resources/","text":"Managing Available Resources Show overall disk usage df -h Show disk usage for a particular directory du -sh /bin/ Show available memory free -h Show cpu uptime uptime Show cpu details lscpu Show pci device details lspci Show usb devices lsusb","title":"Managing Available Resources"},{"location":"Topics/Operation_of_Running_Systems/Managing%20Available%20Resources/#managing-available-resources","text":"Show overall disk usage df -h Show disk usage for a particular directory du -sh /bin/ Show available memory free -h Show cpu uptime uptime Show cpu details lscpu Show pci device details lspci Show usb devices lsusb","title":"Managing Available Resources"},{"location":"Topics/Operation_of_Running_Systems/Managing%20Bootloaders/","text":"Managing Bootloaders Install generate grub config: bios: grub2-mkconfig -o /boot/grub2/grub.cfg efi: grub2-mkconfig -o /boot/efi/EFI/centos/grub.cfg install grub: bios: grub2-install /dev/sda efi: dnf reinstall grub2-efi grub2-efi-modules shim Configure Edit the configuration file sudo vim /etc/default/grub Generate a new grub config based on the configuration file: grub2-mkconfig -o ... # see above examples","title":"Managing Bootloaders"},{"location":"Topics/Operation_of_Running_Systems/Managing%20Bootloaders/#managing-bootloaders","text":"","title":"Managing Bootloaders"},{"location":"Topics/Operation_of_Running_Systems/Managing%20Bootloaders/#install","text":"generate grub config: bios: grub2-mkconfig -o /boot/grub2/grub.cfg efi: grub2-mkconfig -o /boot/efi/EFI/centos/grub.cfg install grub: bios: grub2-install /dev/sda efi: dnf reinstall grub2-efi grub2-efi-modules shim","title":"Install"},{"location":"Topics/Operation_of_Running_Systems/Managing%20Bootloaders/#configure","text":"Edit the configuration file sudo vim /etc/default/grub Generate a new grub config based on the configuration file: grub2-mkconfig -o ... # see above examples","title":"Configure"},{"location":"Topics/Operation_of_Running_Systems/Managing%20Kernel%20Parameters/","text":"Managing Kernel Parameters Show all kernel parameters in use sudo sysctl -a Set kernel parameter (non persistent) sudo sysctl -w <param>=<value> Set kernel parameter (persistent) echo '<param>=<value>' > '/etc/sysctl.d/<filename>.conf' Set kernel parameter(s) from file sudo sysctl -p <path to file> Check a particular param sudo sysctl <param>","title":"Managing Kernel Parameters"},{"location":"Topics/Operation_of_Running_Systems/Managing%20Kernel%20Parameters/#managing-kernel-parameters","text":"Show all kernel parameters in use sudo sysctl -a Set kernel parameter (non persistent) sudo sysctl -w <param>=<value> Set kernel parameter (persistent) echo '<param>=<value>' > '/etc/sysctl.d/<filename>.conf' Set kernel parameter(s) from file sudo sysctl -p <path to file> Check a particular param sudo sysctl <param>","title":"Managing Kernel Parameters"},{"location":"Topics/Operation_of_Running_Systems/Managing%20Log%20Files/","text":"Managing Log Files Show contents of log files directory /var/log/ Find logs for ssh grep -r 'ssh' /var/log Follow the output of a log file tail -F /var/log/secure Browse a journal of all logs journalctl Show journal logs based on priority jounralctl -p <priority> Show journal logs starting from given time journalctl -S <time> Show journal logs until given time journalctl -U <time> Show journal logs in given timeframe journalctl -S <start> -U <end> Show journal logs for current boot journalctl -b 0 Show journal logs for previous boot journalctl -b -1 Show journal logs generated by a command journalctl </path/to/executable> Show journal logs for service unit journalctl -u <service name> Show who logged into the system last lastlog","title":"Managing Log Files"},{"location":"Topics/Operation_of_Running_Systems/Managing%20Log%20Files/#managing-log-files","text":"Show contents of log files directory /var/log/ Find logs for ssh grep -r 'ssh' /var/log Follow the output of a log file tail -F /var/log/secure Browse a journal of all logs journalctl Show journal logs based on priority jounralctl -p <priority> Show journal logs starting from given time journalctl -S <time> Show journal logs until given time journalctl -U <time> Show journal logs in given timeframe journalctl -S <start> -U <end> Show journal logs for current boot journalctl -b 0 Show journal logs for previous boot journalctl -b -1 Show journal logs generated by a command journalctl </path/to/executable> Show journal logs for service unit journalctl -u <service name> Show who logged into the system last lastlog","title":"Managing Log Files"},{"location":"Topics/Operation_of_Running_Systems/Managing%20Processes/","text":"Manage Processes Show running processes in the current session ps Show all running processes ps aux Task manager-style output top Show details for a given process ps u <PID> Show processes started by user ps u -U <username> Show processes by name pgrep -a ... Start process with a given nice value nice -n <value> <command> Show nice values in ps ps lax Show tree-like structure ps faux Change nice value of process renice <nice value> <PID> Show signals that can be sent to a process kill -L Send signal to process kill -<SIGNAL> <PID> Kill process based on name pkill <name> Send signal to all processes that contain <NAME> in their name pkill -<SIGNALL> <NAME> Send process to background <command> & Show all background processes jobs Get process from background fg <JOB NUMBER> Resume a frozen background process bg <JOB NUMBER> Show files used by process lsof -p <PID> Show processes using a file lsof <filepath>","title":"Managing Processes"},{"location":"Topics/Operation_of_Running_Systems/Managing%20Processes/#manage-processes","text":"Show running processes in the current session ps Show all running processes ps aux Task manager-style output top Show details for a given process ps u <PID> Show processes started by user ps u -U <username> Show processes by name pgrep -a ... Start process with a given nice value nice -n <value> <command> Show nice values in ps ps lax Show tree-like structure ps faux Change nice value of process renice <nice value> <PID> Show signals that can be sent to a process kill -L Send signal to process kill -<SIGNAL> <PID> Kill process based on name pkill <name> Send signal to all processes that contain <NAME> in their name pkill -<SIGNALL> <NAME> Send process to background <command> & Show all background processes jobs Get process from background fg <JOB NUMBER> Resume a frozen background process bg <JOB NUMBER> Show files used by process lsof -p <PID> Show processes using a file lsof <filepath>","title":"Manage Processes"},{"location":"Topics/Operation_of_Running_Systems/Managing%20SELinux/","text":"Managing SELinux SELinux context label format: user:role:type:level Show SELinux file context ls -Z Show SELinux process context ps axZ Show security context for the current user id -Z Show SELinux mappings for users sudo semanage login -l Show all SELinux users and their roles sudo semanage user -l Check if SELinux is enabled sudo getenforce Enforcing status: - enforcing -> active - permissive -> active but only logging - disabled -> not active Temporarily enable/disable SELinux sudo setenforce 0/1 Set SELinux context for a file chcon <context> <file> Set SELinux context for a file using another as a reference chcon --reference=<ref file> <target file> Change SELinux user for a file chcon -u <user> <file> Change SELinux role for a file chcon -r <role> <file> Change SELinux type for a file chcon -t <type> <file> Change SELinux level for a file chcon -l <level> <file>","title":"Managing SELinux"},{"location":"Topics/Operation_of_Running_Systems/Managing%20SELinux/#managing-selinux","text":"SELinux context label format: user:role:type:level Show SELinux file context ls -Z Show SELinux process context ps axZ Show security context for the current user id -Z Show SELinux mappings for users sudo semanage login -l Show all SELinux users and their roles sudo semanage user -l Check if SELinux is enabled sudo getenforce Enforcing status: - enforcing -> active - permissive -> active but only logging - disabled -> not active Temporarily enable/disable SELinux sudo setenforce 0/1 Set SELinux context for a file chcon <context> <file> Set SELinux context for a file using another as a reference chcon --reference=<ref file> <target file> Change SELinux user for a file chcon -u <user> <file> Change SELinux role for a file chcon -r <role> <file> Change SELinux type for a file chcon -t <type> <file> Change SELinux level for a file chcon -l <level> <file>","title":"Managing SELinux"},{"location":"Topics/Operation_of_Running_Systems/Managing%20Services/","text":"Managing Processes Startup services are defined in unit files in /etc/systemd/system Show a service unit file systemctl cat sshd.service Edit a service unit file systemctl edit --full sshd.service Reset a service unit file systemctl revert sshd.service Show service status systemctl status sshd.service Start service systemctl start sshd.service Stop service systemctl stop service Reload a service systemctl reload sshd.service Restart a service systemctl restart sshd.service Reload/Restart a service systemctl reload-or-restart sshd.service Enable service (start on boot) systemctl enable sshd.service Enable and start service systemctl enable --now sshd.service Disable service (prevent start on boot) systemctl disable sshd.service Disable and stop service systemctl disable --now sshd.service check if a service is enabled systemctl is-enabled sshd.service Mask a service (prevent starting a service at all) systemctl mask sshd.service Unmask a service systemctl unmask sshd.service Get a list of all services systemctl list-units --all --type service","title":"Managing Services"},{"location":"Topics/Operation_of_Running_Systems/Managing%20Services/#managing-processes","text":"Startup services are defined in unit files in /etc/systemd/system Show a service unit file systemctl cat sshd.service Edit a service unit file systemctl edit --full sshd.service Reset a service unit file systemctl revert sshd.service Show service status systemctl status sshd.service Start service systemctl start sshd.service Stop service systemctl stop service Reload a service systemctl reload sshd.service Restart a service systemctl restart sshd.service Reload/Restart a service systemctl reload-or-restart sshd.service Enable service (start on boot) systemctl enable sshd.service Enable and start service systemctl enable --now sshd.service Disable service (prevent start on boot) systemctl disable sshd.service Disable and stop service systemctl disable --now sshd.service check if a service is enabled systemctl is-enabled sshd.service Mask a service (prevent starting a service at all) systemctl mask sshd.service Unmask a service systemctl unmask sshd.service Get a list of all services systemctl list-units --all --type service","title":"Managing Processes"},{"location":"Topics/Operation_of_Running_Systems/Managing%20Software%20Packages/","text":"Managing Software Packages Check for available upgrades sudo dnf check-upgrade Upgrade installed packages sudo dnf upgrade Show configured repositories sudo dnf repolist Show all repositories sudo dnf repolist --all Enable additional repository sudo dnf config-manager --enable <name> Disable additional repository sudo dnf config-manager --disable <name> Add a 3rd party repository sudo dnf config-manager --add-repo <repo url> Search for a package sudo dnf search 'key word' Show info for a package sudo dnf info <package> Install a new packages sudo dnf install <package> Reinstall package sudo dnf reinstall <package> Uninstall existing package sudo dnf remove <package> Show group installs sudo dnf group list Show ALL group installs sudo dnf group list --hidden Install group sudo dnf group install '<name>' --with-optional Uninstall group sudo dnf group remove '<name>' Manually install an .rpm file sudo dnf install ./*.rpm Remove unused packages sudo dnf autoremove Show what package provided a given file sudo dnf provides /bin/top Show all files provided by a given package sudo dnf repoquery --list nginx","title":"Managing Software Packages"},{"location":"Topics/Operation_of_Running_Systems/Managing%20Software%20Packages/#managing-software-packages","text":"Check for available upgrades sudo dnf check-upgrade Upgrade installed packages sudo dnf upgrade Show configured repositories sudo dnf repolist Show all repositories sudo dnf repolist --all Enable additional repository sudo dnf config-manager --enable <name> Disable additional repository sudo dnf config-manager --disable <name> Add a 3rd party repository sudo dnf config-manager --add-repo <repo url> Search for a package sudo dnf search 'key word' Show info for a package sudo dnf info <package> Install a new packages sudo dnf install <package> Reinstall package sudo dnf reinstall <package> Uninstall existing package sudo dnf remove <package> Show group installs sudo dnf group list Show ALL group installs sudo dnf group list --hidden Install group sudo dnf group install '<name>' --with-optional Uninstall group sudo dnf group remove '<name>' Manually install an .rpm file sudo dnf install ./*.rpm Remove unused packages sudo dnf autoremove Show what package provided a given file sudo dnf provides /bin/top Show all files provided by a given package sudo dnf repoquery --list nginx","title":"Managing Software Packages"},{"location":"Topics/Operation_of_Running_Systems/Operating%20Modes/","text":"Operating Modes Show the default boot target systemctl get-default Change the default boot target systemctl set-default ... Switch to a different target for the current session systemctl isolate ... Other targets: - graphical -> GUI target - multi-user -> terminal target - emergency -> loads as little services as possible - rescue -> loads more services than emergency, but less than regular targets","title":"Operating Modes"},{"location":"Topics/Operation_of_Running_Systems/Operating%20Modes/#operating-modes","text":"Show the default boot target systemctl get-default Change the default boot target systemctl set-default ... Switch to a different target for the current session systemctl isolate ... Other targets: - graphical -> GUI target - multi-user -> terminal target - emergency -> loads as little services as possible - rescue -> loads more services than emergency, but less than regular targets","title":"Operating Modes"},{"location":"Topics/Operation_of_Running_Systems/Scheduling%20Tasks/","text":"Scheduling Jobs Tools: cron -> set up recurring jobs (can miss jobs) anacron -> set up recurring jobs (doesn't miss jobs) at -> scheduling one-shot jobs Cron crontab Sample jobs syntax: cat /etc/crontab Show the crontab for the current user crontab -l Edit the crontab for the current user crontab -e Edit the crontab for a given user crontab -e -u <user> Remove the crontab for the current user crontab -r Remove the crontab for a given user crontab -r -u <user> Examples : Cron directories hourly: /etc/cron.hourly/ daily: /etc/cron.daily/ weekly: /etc/cron.weekly/ monthly: /etc/cron.monthly/ Anacron Edit anacrontab vim /etc/anacrontab Verify anacrontab anacron -T Force anacron to run jobs for today anacron -n -f At run job at 3PM at 15:00 run job on specific date at 'September 15 2023' run job on specific date at specific time: `at '15:00 September 15 2023' run job in 10 minutes at 'now + 10 minutes' See scheduled jobs atq Inspect job at -c <job number> Remove scheduled job atrm <job number>","title":"Scheduling Tasks"},{"location":"Topics/Operation_of_Running_Systems/Scheduling%20Tasks/#scheduling-jobs","text":"Tools: cron -> set up recurring jobs (can miss jobs) anacron -> set up recurring jobs (doesn't miss jobs) at -> scheduling one-shot jobs","title":"Scheduling Jobs"},{"location":"Topics/Operation_of_Running_Systems/Scheduling%20Tasks/#cron","text":"","title":"Cron"},{"location":"Topics/Operation_of_Running_Systems/Scheduling%20Tasks/#crontab","text":"Sample jobs syntax: cat /etc/crontab Show the crontab for the current user crontab -l Edit the crontab for the current user crontab -e Edit the crontab for a given user crontab -e -u <user> Remove the crontab for the current user crontab -r Remove the crontab for a given user crontab -r -u <user> Examples :","title":"crontab"},{"location":"Topics/Operation_of_Running_Systems/Scheduling%20Tasks/#cron-directories","text":"hourly: /etc/cron.hourly/ daily: /etc/cron.daily/ weekly: /etc/cron.weekly/ monthly: /etc/cron.monthly/","title":"Cron directories"},{"location":"Topics/Operation_of_Running_Systems/Scheduling%20Tasks/#anacron","text":"Edit anacrontab vim /etc/anacrontab Verify anacrontab anacron -T Force anacron to run jobs for today anacron -n -f","title":"Anacron"},{"location":"Topics/Operation_of_Running_Systems/Scheduling%20Tasks/#at","text":"run job at 3PM at 15:00 run job on specific date at 'September 15 2023' run job on specific date at specific time: `at '15:00 September 15 2023' run job in 10 minutes at 'now + 10 minutes' See scheduled jobs atq Inspect job at -c <job number> Remove scheduled job atrm <job number>","title":"At"},{"location":"Topics/Service_Configuration/","text":"Service Configuration Topics Database DNS HTTP IMAP Containers Virtual Machines SSH","title":"Index"},{"location":"Topics/Service_Configuration/#service-configuration","text":"","title":"Service Configuration"},{"location":"Topics/Service_Configuration/#topics","text":"Database DNS HTTP IMAP Containers Virtual Machines SSH","title":"Topics"},{"location":"Topics/Service_Configuration/Containers/","text":"Managing (Docker) Containers Install docker (container engine) sudo dnf install docker Modify configured registries sudo vim /etc/containers/registries.conf Pull (download) a docker image docker pull nginx Show downloaded docker images docker image ls Remove a docker image docker image rm nginx Run a nginx container docker run -d nginx --name=mynginx Stop a running container docker stop mynginx Start a stopped container docker start mynginx Delete a container docker rm mynginx Show running containers docker ps Show all containers docker ps -a See the official commandline reference","title":"Managing Docker Containers"},{"location":"Topics/Service_Configuration/Containers/#managing-docker-containers","text":"Install docker (container engine) sudo dnf install docker Modify configured registries sudo vim /etc/containers/registries.conf Pull (download) a docker image docker pull nginx Show downloaded docker images docker image ls Remove a docker image docker image rm nginx Run a nginx container docker run -d nginx --name=mynginx Stop a running container docker stop mynginx Start a stopped container docker start mynginx Delete a container docker rm mynginx Show running containers docker ps Show all containers docker ps -a See the official commandline reference","title":"Managing (Docker) Containers"},{"location":"Topics/Service_Configuration/DNS/","text":"Managing DNS Configuring a DNS server Install a DNS server sudo dnf install bind bind-utils Enable the service sudo systemctl enable --now named Allow traffic through firewall sudo firewall-cmd --add-service=dns --permanent Edit the bind configuration file sudo vim /etc/named.conf Check the manpages for more options man named.conf Test dns resolution dig @127.0.0.1 google.com Maintaining a DNS Zone Edit the configuration file for DNS zones: sudo vim /etc/named.conf Reload after configuration change sudo systemctl restart named DNS Zone Example : # ... zone \"mirceanton.com\" IN { type master; file \"mirceanton.com.zone\"; }; sudo cp --preserve=all /var/named/named.localhost /var/named/mirceanton.com.zone sudo vim /var/named/mirceanton.com.zone $TTL 1D @ IN SOA @ administrator.mirceanton.com. ( 0 ; serial # <-- version of this config 1D ; refresh # <-- time interval for slaves to sync their version 1H ; retry # <-- if last check failed, how long til next try 1W ; expire # <-- amount of time to keep the zone if they get no reply from master 3H ) ; minimum # <-- how long other servers to cache negative responses @ NS ns1.mirceanton.com. # defines a nameserver @ NS ns2.mirceanton.com. # defines a nameserver ns1 A 1.2.3.4 # A record to the nameserver ns2 A 1.2.3.5 # A record to the nameserver @ A 2.3.4.5 www A 2.3.4.5 # www CNAME 2.3.4.5 # same as previous line mirceanton.com. MX 10 mail1.mirceanton.com. MX 20 mail2.mirceanton.com. mail1 A 1.2.3.6 mail2 A 1.2.3.7 @ TXT \"lorem ipsum dolor ihmet\" Extra tips and tricks : allow query from given network: allow-query { 0.0.0.0/24; }; check dns records for a given domain on the local dns server: dig @localhost name.com ANY add a new record to a given zone so that subdomain.domain.com resolves to 1.2.3.4 : echo \"subdomain.domain.com. A 1.2.3.4\" > /var/named/domain.com.zone add a new record to a given zone so that sdomain.domain.com points to subdomain.domain.com : echo \"sdomain.domain.com. CNAME subdomain.domain.com to allow bind to fetch data from upstream dns servers, set recursion to yes in /etc/named.conf change the TTL of a given zone to 5 hours: inside /var/named/mirceanton.com.zone , a line should read $TTL 5H","title":"Managing DNS"},{"location":"Topics/Service_Configuration/DNS/#managing-dns","text":"","title":"Managing DNS"},{"location":"Topics/Service_Configuration/DNS/#configuring-a-dns-server","text":"Install a DNS server sudo dnf install bind bind-utils Enable the service sudo systemctl enable --now named Allow traffic through firewall sudo firewall-cmd --add-service=dns --permanent Edit the bind configuration file sudo vim /etc/named.conf Check the manpages for more options man named.conf Test dns resolution dig @127.0.0.1 google.com","title":"Configuring a DNS server"},{"location":"Topics/Service_Configuration/DNS/#maintaining-a-dns-zone","text":"Edit the configuration file for DNS zones: sudo vim /etc/named.conf Reload after configuration change sudo systemctl restart named DNS Zone Example : # ... zone \"mirceanton.com\" IN { type master; file \"mirceanton.com.zone\"; }; sudo cp --preserve=all /var/named/named.localhost /var/named/mirceanton.com.zone sudo vim /var/named/mirceanton.com.zone $TTL 1D @ IN SOA @ administrator.mirceanton.com. ( 0 ; serial # <-- version of this config 1D ; refresh # <-- time interval for slaves to sync their version 1H ; retry # <-- if last check failed, how long til next try 1W ; expire # <-- amount of time to keep the zone if they get no reply from master 3H ) ; minimum # <-- how long other servers to cache negative responses @ NS ns1.mirceanton.com. # defines a nameserver @ NS ns2.mirceanton.com. # defines a nameserver ns1 A 1.2.3.4 # A record to the nameserver ns2 A 1.2.3.5 # A record to the nameserver @ A 2.3.4.5 www A 2.3.4.5 # www CNAME 2.3.4.5 # same as previous line mirceanton.com. MX 10 mail1.mirceanton.com. MX 20 mail2.mirceanton.com. mail1 A 1.2.3.6 mail2 A 1.2.3.7 @ TXT \"lorem ipsum dolor ihmet\" Extra tips and tricks : allow query from given network: allow-query { 0.0.0.0/24; }; check dns records for a given domain on the local dns server: dig @localhost name.com ANY add a new record to a given zone so that subdomain.domain.com resolves to 1.2.3.4 : echo \"subdomain.domain.com. A 1.2.3.4\" > /var/named/domain.com.zone add a new record to a given zone so that sdomain.domain.com points to subdomain.domain.com : echo \"sdomain.domain.com. CNAME subdomain.domain.com to allow bind to fetch data from upstream dns servers, set recursion to yes in /etc/named.conf change the TTL of a given zone to 5 hours: inside /var/named/mirceanton.com.zone , a line should read $TTL 5H","title":"Maintaining a DNS Zone"},{"location":"Topics/Service_Configuration/Database/","text":"Managing Database Servers Install mariadb sudo dnf install mariadb-server Start and enable mariadb service sudo systemctl enable --now mariadb Allow mariadb traffic through firewall sudo firewall-cmd --add-service=mysql --permanent Secure the mariadb installation sudo mysql_secure_installation Log in as mysql root user mysql -u root -p Edit the main configuration file sudo vim /etc/my.cnf.d/mariadb-server.cnf Typical actions: - set data directory - set socket - set log file - set bind-address (default 0.0.0.0 ) - set port by configuring the port=... directive under [mysqld]","title":"Managing Database Servers"},{"location":"Topics/Service_Configuration/Database/#managing-database-servers","text":"Install mariadb sudo dnf install mariadb-server Start and enable mariadb service sudo systemctl enable --now mariadb Allow mariadb traffic through firewall sudo firewall-cmd --add-service=mysql --permanent Secure the mariadb installation sudo mysql_secure_installation Log in as mysql root user mysql -u root -p Edit the main configuration file sudo vim /etc/my.cnf.d/mariadb-server.cnf Typical actions: - set data directory - set socket - set log file - set bind-address (default 0.0.0.0 ) - set port by configuring the port=... directive under [mysqld]","title":"Managing Database Servers"},{"location":"Topics/Service_Configuration/HTTP/","text":"Managing HTTP Servers Configure an HTTP Server Install an HTTP server sudo dnf install httpd Enable and start the server sudo systemctl enable --now httpd Allow HTTP traffic through firewall sudo firewalld-cmd --add-service=http --permanent Install the SSL package sudo dnf install mod_ssl Allow HTTPS traffic through firewall sudo firewalld-cmd --add-service=https --permanent Edit the core configuring the server sudo vim /etc/httpd/conf/httpd.conf Typical actions: - change http port - change bind address - set server name (domain) - set document root Edit additional tunables for the server sudo vim /etc/httpd/conf.d/... Typical actions: - configure SSL: sudo vim /etc/httpd/conf.d/ssl.conf - change https port Manage installed modules sudo vim /etc/httpd/conf.modules.d/... seeing the options man httpd.conf Verify the config sudo apachectl configtest Apply the config sudo systemctl reload httpd Example : Configure a private website at blog.example.local found at /var/www/internal/blog ; and an external website at public.example.com found at /var/www/public/ #/var/httpd/conf.d/config.conf <VirtualHost 192.168.1.24:80> # assuming this is the internal IP ServerName blog.example.local DocumentRoot /var/www/internal/blog/ </VirtualHost> <VirtualHost 1.2.3.42:80> # assuming this is the external IP ServerName public.example.com DocumentRoot /var/www/public/ </VirtualHost> Define a new website that uses SSL with the certificate at /opt/site.cert and the key at /opt/site.key #/var/httpd/conf.d/ssl-site.conf <VirtualHost *:443> ServerName sslsite.example.com SSLEngine on # Turn on SSL SSLCertificateFile \"/opt/site.cert\" # path to SSL Cert SSLCertificateKeyFile \"/opt/site.key\" # Path to SSL Key </VirtualHost> Configure HTTP server log files httpd keeps 2 logs: event log: /var/log/httpd/access.log access log: /var/log/httpd/error.log Edit config sudo vim /etc/httpd/conf/httpd.conf Typical actions: - change error log path: ErrorLog \"/path/to/error/file.log\" - set log level: LogLevel ... Restrict access to a web page -Restricting access is done within the <Directory> or <File> directives Examples : Put the /admin path behind basic auth; create user john for it sudo htpasswd -c /etc/httpd/passwords john; echo <<EOT >> /etc/httpd/conf/httpd.conf <Directory \"/var/www/html/admin/\"> AuthType Basic AuthBasicProvider file AuthName \"Secret admin page\" AuthUserFile /etc/httpd/passwords Require valid-user </Directory> EOT","title":"Managing HTTP"},{"location":"Topics/Service_Configuration/HTTP/#managing-http-servers","text":"","title":"Managing HTTP Servers"},{"location":"Topics/Service_Configuration/HTTP/#configure-an-http-server","text":"Install an HTTP server sudo dnf install httpd Enable and start the server sudo systemctl enable --now httpd Allow HTTP traffic through firewall sudo firewalld-cmd --add-service=http --permanent Install the SSL package sudo dnf install mod_ssl Allow HTTPS traffic through firewall sudo firewalld-cmd --add-service=https --permanent Edit the core configuring the server sudo vim /etc/httpd/conf/httpd.conf Typical actions: - change http port - change bind address - set server name (domain) - set document root Edit additional tunables for the server sudo vim /etc/httpd/conf.d/... Typical actions: - configure SSL: sudo vim /etc/httpd/conf.d/ssl.conf - change https port Manage installed modules sudo vim /etc/httpd/conf.modules.d/... seeing the options man httpd.conf Verify the config sudo apachectl configtest Apply the config sudo systemctl reload httpd Example : Configure a private website at blog.example.local found at /var/www/internal/blog ; and an external website at public.example.com found at /var/www/public/ #/var/httpd/conf.d/config.conf <VirtualHost 192.168.1.24:80> # assuming this is the internal IP ServerName blog.example.local DocumentRoot /var/www/internal/blog/ </VirtualHost> <VirtualHost 1.2.3.42:80> # assuming this is the external IP ServerName public.example.com DocumentRoot /var/www/public/ </VirtualHost> Define a new website that uses SSL with the certificate at /opt/site.cert and the key at /opt/site.key #/var/httpd/conf.d/ssl-site.conf <VirtualHost *:443> ServerName sslsite.example.com SSLEngine on # Turn on SSL SSLCertificateFile \"/opt/site.cert\" # path to SSL Cert SSLCertificateKeyFile \"/opt/site.key\" # Path to SSL Key </VirtualHost>","title":"Configure an HTTP Server"},{"location":"Topics/Service_Configuration/HTTP/#configure-http-server-log-files","text":"httpd keeps 2 logs: event log: /var/log/httpd/access.log access log: /var/log/httpd/error.log Edit config sudo vim /etc/httpd/conf/httpd.conf Typical actions: - change error log path: ErrorLog \"/path/to/error/file.log\" - set log level: LogLevel ...","title":"Configure HTTP server log files"},{"location":"Topics/Service_Configuration/HTTP/#restrict-access-to-a-web-page","text":"-Restricting access is done within the <Directory> or <File> directives Examples : Put the /admin path behind basic auth; create user john for it sudo htpasswd -c /etc/httpd/passwords john; echo <<EOT >> /etc/httpd/conf/httpd.conf <Directory \"/var/www/html/admin/\"> AuthType Basic AuthBasicProvider file AuthName \"Secret admin page\" AuthUserFile /etc/httpd/passwords Require valid-user </Directory> EOT","title":"Restrict access to a web page"},{"location":"Topics/Service_Configuration/IMAP/","text":"Managin an IMAP Server Install the IMAP server sudo dnf install dovecot Enable and start the service sudo systemctl enable --now dovecot Allow IMAP traffic through the firewall sudo firewall-cmd --add-service=imap --add-service=imaps --permanent Edit the main configuration file sudo vim /etc/dovecot/dovecot.conf Typical actions: - protocols - bind address Additional config files are found at /etc/dovecot/conf.d/ Change the default ports sudo vim /etc/dovecot/conf.d/10-master.conf Change default mailbox locations sudo vim /etc/dovecot/conf.d/10-mail.conf Configure TLS ssl = required -> only work with TLS ssl = yes -> work with and without TLS ssl = no -> only work without TLS sudo vim /etc/dovecot/confd./10-ssl.conf Email Aliases Install postfix sudo dnf install postfix Enable and start the service sudo systemctl enable --now postfix Send mail to user sendmail user@domain <<< \"email body here\" Check mail for user cat /var/spool/mail/<USER> Create email alias sudo vim /etc/alias Typical actions: - alias sales to mike: sales: mike - alias support to mike and tony: support: mike,tony - alias external to mike@somedomain.tld: external: mike@somedomain.tld Reload aliases sudo newaliases","title":"Managing IMAP Servers"},{"location":"Topics/Service_Configuration/IMAP/#managin-an-imap-server","text":"Install the IMAP server sudo dnf install dovecot Enable and start the service sudo systemctl enable --now dovecot Allow IMAP traffic through the firewall sudo firewall-cmd --add-service=imap --add-service=imaps --permanent Edit the main configuration file sudo vim /etc/dovecot/dovecot.conf Typical actions: - protocols - bind address Additional config files are found at /etc/dovecot/conf.d/ Change the default ports sudo vim /etc/dovecot/conf.d/10-master.conf Change default mailbox locations sudo vim /etc/dovecot/conf.d/10-mail.conf Configure TLS ssl = required -> only work with TLS ssl = yes -> work with and without TLS ssl = no -> only work without TLS sudo vim /etc/dovecot/confd./10-ssl.conf","title":"Managin an IMAP Server"},{"location":"Topics/Service_Configuration/IMAP/#email-aliases","text":"Install postfix sudo dnf install postfix Enable and start the service sudo systemctl enable --now postfix Send mail to user sendmail user@domain <<< \"email body here\" Check mail for user cat /var/spool/mail/<USER> Create email alias sudo vim /etc/alias Typical actions: - alias sales to mike: sales: mike - alias support to mike and tony: support: mike,tony - alias external to mike@somedomain.tld: external: mike@somedomain.tld Reload aliases sudo newaliases","title":"Email Aliases"},{"location":"Topics/Service_Configuration/SSH/","text":"Managing SSH Servers and Clients SSH Server Managing the SSH server config vim /etc/ssh/sshd_config Typical actions: - change port - change listen address - listen on ipv4/ipv6 (inet/inet6) - allow/disallow root login - allow/disallow password login - allow/disallow key-based login Add custom settings for a given user ... Match User <username> <settings here> ... Reload sshd settings sudo systemctl reload sshd SSH Client Manage the global SSH client settings: vim /etc/ssh/ssh_config # NOT RECOMMENDED vim /etc/ssh/ssh_config.d/99-custom-settings.conf # <-- RECOMMENDED Creating a static config for ssh hosts: vim ~/.ssh/config # ~/.ssh/config Host myhostname HostName 1.2.3.4 Port 2222 User myuser # now we can use: ssh myhostname Generate a new SSH key pair ssh-keygen Copy the SSH public key to a server for key-based auth ssh-copy-id user@hostname Remove a saved fingerprint ssh-keygen -R hostname","title":"Managing SSH Servers and Clients"},{"location":"Topics/Service_Configuration/SSH/#managing-ssh-servers-and-clients","text":"","title":"Managing SSH Servers and Clients"},{"location":"Topics/Service_Configuration/SSH/#ssh-server","text":"Managing the SSH server config vim /etc/ssh/sshd_config Typical actions: - change port - change listen address - listen on ipv4/ipv6 (inet/inet6) - allow/disallow root login - allow/disallow password login - allow/disallow key-based login Add custom settings for a given user ... Match User <username> <settings here> ... Reload sshd settings sudo systemctl reload sshd","title":"SSH Server"},{"location":"Topics/Service_Configuration/SSH/#ssh-client","text":"Manage the global SSH client settings: vim /etc/ssh/ssh_config # NOT RECOMMENDED vim /etc/ssh/ssh_config.d/99-custom-settings.conf # <-- RECOMMENDED Creating a static config for ssh hosts: vim ~/.ssh/config # ~/.ssh/config Host myhostname HostName 1.2.3.4 Port 2222 User myuser # now we can use: ssh myhostname Generate a new SSH key pair ssh-keygen Copy the SSH public key to a server for key-based auth ssh-copy-id user@hostname Remove a saved fingerprint ssh-keygen -R hostname","title":"SSH Client"},{"location":"Topics/Service_Configuration/Virtual%20Machines/","text":"Managing Virtual Machines Install required tools: libvirt -> utilities to interact with VMs qemu-kvm -> actually runs virtual machines sudo dnf install libvirt qemu-kvm Create a new VM from an xml file virsh define file.xml Delete a VM virsh undefine <VM name> # keeps storage, see `virsh help undefine` for more options Show information of a VM virsh dominfo <VM name> Show active VMs virsh list Show all VMs virsh list --all Start VM virsh start <VM name> Shutdown VM virsh shutdown <VM name> # graceful shutdown Poweroff VM virsh destroy <VM name> # force shutdown Reboot VM virsh reboot <VM name> # graceful reboot Reset VM virsh reset<VM name> # force reboot Set VM to start on server boot virsh autostart <VM name> Disable VM to start on server boot virsh autostart --disable <VM name> Set number of CPUs for VM virsh setvcpus <VM name> <cpu count> --config --maximum virsh setvcpus <VM name> <cpu count> --config virsh poweroff <VM name> virsh start <VM name> Set memory for VM virsh setmaxmem <VM name> --size <mem>M --config virsh poweroff <VM name> virsh start <VM name> Note: see the official commandline reference","title":"Managing Virtual Machines"},{"location":"Topics/Service_Configuration/Virtual%20Machines/#managing-virtual-machines","text":"Install required tools: libvirt -> utilities to interact with VMs qemu-kvm -> actually runs virtual machines sudo dnf install libvirt qemu-kvm Create a new VM from an xml file virsh define file.xml Delete a VM virsh undefine <VM name> # keeps storage, see `virsh help undefine` for more options Show information of a VM virsh dominfo <VM name> Show active VMs virsh list Show all VMs virsh list --all Start VM virsh start <VM name> Shutdown VM virsh shutdown <VM name> # graceful shutdown Poweroff VM virsh destroy <VM name> # force shutdown Reboot VM virsh reboot <VM name> # graceful reboot Reset VM virsh reset<VM name> # force reboot Set VM to start on server boot virsh autostart <VM name> Disable VM to start on server boot virsh autostart --disable <VM name> Set number of CPUs for VM virsh setvcpus <VM name> <cpu count> --config --maximum virsh setvcpus <VM name> <cpu count> --config virsh poweroff <VM name> virsh start <VM name> Set memory for VM virsh setmaxmem <VM name> --size <mem>M --config virsh poweroff <VM name> virsh start <VM name> Note: see the official commandline reference","title":"Managing Virtual Machines"},{"location":"Topics/Storage_Management/","text":"Storage Management Topics Advanced File System Permissions Managing Encrypted Storage Managing File Systems Managing LVM Managing Quotas Managing RAID Managing Storage Partitions Managing Swap Space","title":"Index"},{"location":"Topics/Storage_Management/#storage-management","text":"","title":"Storage Management"},{"location":"Topics/Storage_Management/#topics","text":"Advanced File System Permissions Managing Encrypted Storage Managing File Systems Managing LVM Managing Quotas Managing RAID Managing Storage Partitions Managing Swap Space","title":"Topics"},{"location":"Topics/Storage_Management/Advanced%20File%20System%20Permissions/","text":"Advanced File System Permissions Access Control Lists Show ACL for a file getfacl ./file Set ACL for user setfacl --modify user:[username]:[permission] ./file Give user mike read-write permissions to file setfacl --modify user:mike:rw ./file Set ACL for group setfacl --modify group:[groupname]:[permission] ./file Give group admins read-write-execute permissions to file setfacl --modify group:admins:rwx ./file Set ACL mask (limits all current ACLs to the mask) setfacl --modify mask:[permission] Limit all permissions to read-only setfacl --modify mask:r Set ACL recursively for a directory setfacl --recursive --modify [user/group]:[name]:[permission] dir/ Remove ACL setfacl --remove [user/group]:name file/ Remove permissions for user mike setfacl --remove user:mike File Attributes Show file attributes lsattr ./file Add attribute chattr +[ATTR] ./file Make file immutable chattr +i ./file Remove attribute chattr i[ATTR] ./file Remove file immutable attribute chattr -i ./file See all attributes man chattr","title":"Advanced File System Permissions"},{"location":"Topics/Storage_Management/Advanced%20File%20System%20Permissions/#advanced-file-system-permissions","text":"","title":"Advanced File System Permissions"},{"location":"Topics/Storage_Management/Advanced%20File%20System%20Permissions/#access-control-lists","text":"Show ACL for a file getfacl ./file Set ACL for user setfacl --modify user:[username]:[permission] ./file Give user mike read-write permissions to file setfacl --modify user:mike:rw ./file Set ACL for group setfacl --modify group:[groupname]:[permission] ./file Give group admins read-write-execute permissions to file setfacl --modify group:admins:rwx ./file Set ACL mask (limits all current ACLs to the mask) setfacl --modify mask:[permission] Limit all permissions to read-only setfacl --modify mask:r Set ACL recursively for a directory setfacl --recursive --modify [user/group]:[name]:[permission] dir/ Remove ACL setfacl --remove [user/group]:name file/ Remove permissions for user mike setfacl --remove user:mike","title":"Access Control Lists"},{"location":"Topics/Storage_Management/Advanced%20File%20System%20Permissions/#file-attributes","text":"Show file attributes lsattr ./file Add attribute chattr +[ATTR] ./file Make file immutable chattr +i ./file Remove attribute chattr i[ATTR] ./file Remove file immutable attribute chattr -i ./file See all attributes man chattr","title":"File Attributes"},{"location":"Topics/Storage_Management/Managing%20Encrypted%20Storage/","text":"Managing Encrypted Storage To encrypt a storage device: cryptsetup Encryption modes: plain luks (linux unified key setup) Encryption in plain mode To open a secured disk bash sudo cryptsetup --verify-passphrase open --type plain /dev/sdb encrypted_disk In this case: --verify-passphrase checks the password before decrypting to avoid corruption if a wrong password is provided open the action to perform --type plain encription mode /dev/sdb the device where data is stored encrypted_disk the name for the mapped device -> /dev/mapper/encrypted_disk Create an xfs partition on an encrypted disk sudo mkfs.xfs /dev/mapper/encrypted_disk Mount an encrypted disk sudo mount /dev/mapper/encrypted_disk /mnt Note: the mapped device is basically acting like a proxy. Data gets sent to it and then it encrypts it and sends it to the actual disk. It does not store data in it per se. Same for reading, it decrypts the data from the disk and gives it to us. All read-write operations happen on the disk itself ( /dev/sdb in this example) Close an encrypted disk sudo cryptsetup close encrypted_disk Encryption in luks mode Create a luks disk sudo cryptsetup luksFormat /dev/sdb Change the password of a disk sudo cryptsetup luksChangeKey /dev/sdb Open a luks disk sudo cryptsetup open /dev/sdb luks_disk Create a fs on a luks disk sudo mkfs.xfs /dev/mapper/luks_disk Close a luks disk sudo cryptsetup close luks_disk","title":"Managing Encrypted Storage"},{"location":"Topics/Storage_Management/Managing%20Encrypted%20Storage/#managing-encrypted-storage","text":"To encrypt a storage device: cryptsetup Encryption modes: plain luks (linux unified key setup)","title":"Managing Encrypted Storage"},{"location":"Topics/Storage_Management/Managing%20Encrypted%20Storage/#encryption-in-plain-mode","text":"To open a secured disk bash sudo cryptsetup --verify-passphrase open --type plain /dev/sdb encrypted_disk In this case: --verify-passphrase checks the password before decrypting to avoid corruption if a wrong password is provided open the action to perform --type plain encription mode /dev/sdb the device where data is stored encrypted_disk the name for the mapped device -> /dev/mapper/encrypted_disk Create an xfs partition on an encrypted disk sudo mkfs.xfs /dev/mapper/encrypted_disk Mount an encrypted disk sudo mount /dev/mapper/encrypted_disk /mnt Note: the mapped device is basically acting like a proxy. Data gets sent to it and then it encrypts it and sends it to the actual disk. It does not store data in it per se. Same for reading, it decrypts the data from the disk and gives it to us. All read-write operations happen on the disk itself ( /dev/sdb in this example) Close an encrypted disk sudo cryptsetup close encrypted_disk","title":"Encryption in plain mode"},{"location":"Topics/Storage_Management/Managing%20Encrypted%20Storage/#encryption-in-luks-mode","text":"Create a luks disk sudo cryptsetup luksFormat /dev/sdb Change the password of a disk sudo cryptsetup luksChangeKey /dev/sdb Open a luks disk sudo cryptsetup open /dev/sdb luks_disk Create a fs on a luks disk sudo mkfs.xfs /dev/mapper/luks_disk Close a luks disk sudo cryptsetup close luks_disk","title":"Encryption in luks mode"},{"location":"Topics/Storage_Management/Managing%20File%20Systems/","text":"Managing File Systems XFS Creating an XFS filesystem sudo mkfs.xfs /dev/sda Check options for xfs man mkfs.xfs Create and label an xfs partition with inode size of 510 sudo mkfs.xfs -L \"FileLabel\" -i 512 /dev/sda To manage an existing partition sudo xfs_admin [OPTION] /dev/sda Change label of xfs partition sudo xfs_admin -L \"newLabel\" /dev/sda Show label of xfs partition sudo xfs_admin -l /dev/sda Repair an xfs partition sudo xfs_repair -v /dev/sdb1 EXT4 Creating an EXT4 filesystem sudo mkfs.ext4 /dev/sda Check options for ext4 man mkfs.ext4 Create a partition with a custom number of inodes and a label sudo mkfs.ext4 -L \"FileLabel\" -N 1024000 /dev/sda To manage an existing ext4 partition sudo tune2fs [OPTION] /dev/sda Change label of ext4 partition sudo tune2fs -L \"newLabel\" /dev/sda Show label of ext4 partition sudo tune2fs -l /dev/sda Repair ext4 partition sudo fsck.ext4 -v -f -p /dev/sdb2 Mounting File Systems To mount /dev/sdb1 on /mnt sudo mount /dev/sdb1 /mnt To unmount the partition sudo umount /mnt To show all mounted devices (and their options) findmnt To show all xfs mounted devices findmnt -T xfs To edit the mount options of a partition bash sudo mount -o [OPTIONS] /dev/sda /mnt Commonly used options: defaults -> default options rw -> read-write ro -> read-only nosuid -> the filesystem cannot contain SUID files noexec -> the filesystem cannot contain executable binaries nodev -> the filesystem cannot contain special devices noauto -> the filsystem is not auto-mounted At or During boot Modify the /etc/fstab file to include the partitions to be mounted at boot. To mount /dev/sdb1 on /mnt as xfs during boot, add the following line to /etc/fstab : # DEVICE MOUNT POINT FS Type FS Options Backup enable/disable Err check priority /dev/sdb1 /mnt xfs defaults 0 2 To mount /dev/sdb2 as read-only # DEVICE MOUNT POINT FS Type FS Options Backup enable/disable Err check priority /dev/sdb1 /mnt xfs defaults,ro 0 2 To mount a swap device during boot, add the following line: /swapfile none swap defaults 0 0 To force the system to mount the devices in /etc/fstab without rebooting sudo mount -a Note: we can also provide the UUID of a block device instead of their name On demand Utility: autofs Configuration file: /etc/auto.master Install autofs sudo dnf install -y autofs Start autofs sudo systemctl enable --now autofs Configure autofs to auto-mount the /shares directory, unmount it if unused for 400 sec and define the options in a custom auto.shares file bash /shares/ /etc/auto.shares --timeout=400 In this case: shares/ is the root directory in which all other filesystems will be auto-mounted. /etc/auto.shares is the config file for the shares/ directory --timeout=400 the number of seconds the fs is unused before unmounting bash $cat /etc/auto.shares dir -fstype=auto 127.0.0.1:/etc In this case: - dir is the name of the directory inside /shares/ - -fstype=auto tells autofs to auto deduce the fs type - 127.0.0.1:/etc is the path to the network share we want to mount Reload changes to autofs config file sudo systemctl reload autofs To automount file systems at root level with autofs, use /- as the root directory","title":"Managing File Systems"},{"location":"Topics/Storage_Management/Managing%20File%20Systems/#managing-file-systems","text":"","title":"Managing File Systems"},{"location":"Topics/Storage_Management/Managing%20File%20Systems/#xfs","text":"Creating an XFS filesystem sudo mkfs.xfs /dev/sda Check options for xfs man mkfs.xfs Create and label an xfs partition with inode size of 510 sudo mkfs.xfs -L \"FileLabel\" -i 512 /dev/sda To manage an existing partition sudo xfs_admin [OPTION] /dev/sda Change label of xfs partition sudo xfs_admin -L \"newLabel\" /dev/sda Show label of xfs partition sudo xfs_admin -l /dev/sda Repair an xfs partition sudo xfs_repair -v /dev/sdb1","title":"XFS"},{"location":"Topics/Storage_Management/Managing%20File%20Systems/#ext4","text":"Creating an EXT4 filesystem sudo mkfs.ext4 /dev/sda Check options for ext4 man mkfs.ext4 Create a partition with a custom number of inodes and a label sudo mkfs.ext4 -L \"FileLabel\" -N 1024000 /dev/sda To manage an existing ext4 partition sudo tune2fs [OPTION] /dev/sda Change label of ext4 partition sudo tune2fs -L \"newLabel\" /dev/sda Show label of ext4 partition sudo tune2fs -l /dev/sda Repair ext4 partition sudo fsck.ext4 -v -f -p /dev/sdb2","title":"EXT4"},{"location":"Topics/Storage_Management/Managing%20File%20Systems/#mounting-file-systems","text":"To mount /dev/sdb1 on /mnt sudo mount /dev/sdb1 /mnt To unmount the partition sudo umount /mnt To show all mounted devices (and their options) findmnt To show all xfs mounted devices findmnt -T xfs To edit the mount options of a partition bash sudo mount -o [OPTIONS] /dev/sda /mnt Commonly used options: defaults -> default options rw -> read-write ro -> read-only nosuid -> the filesystem cannot contain SUID files noexec -> the filesystem cannot contain executable binaries nodev -> the filesystem cannot contain special devices noauto -> the filsystem is not auto-mounted","title":"Mounting File Systems"},{"location":"Topics/Storage_Management/Managing%20File%20Systems/#at-or-during-boot","text":"Modify the /etc/fstab file to include the partitions to be mounted at boot. To mount /dev/sdb1 on /mnt as xfs during boot, add the following line to /etc/fstab : # DEVICE MOUNT POINT FS Type FS Options Backup enable/disable Err check priority /dev/sdb1 /mnt xfs defaults 0 2 To mount /dev/sdb2 as read-only # DEVICE MOUNT POINT FS Type FS Options Backup enable/disable Err check priority /dev/sdb1 /mnt xfs defaults,ro 0 2 To mount a swap device during boot, add the following line: /swapfile none swap defaults 0 0 To force the system to mount the devices in /etc/fstab without rebooting sudo mount -a Note: we can also provide the UUID of a block device instead of their name","title":"At or During boot"},{"location":"Topics/Storage_Management/Managing%20File%20Systems/#on-demand","text":"Utility: autofs Configuration file: /etc/auto.master Install autofs sudo dnf install -y autofs Start autofs sudo systemctl enable --now autofs Configure autofs to auto-mount the /shares directory, unmount it if unused for 400 sec and define the options in a custom auto.shares file bash /shares/ /etc/auto.shares --timeout=400 In this case: shares/ is the root directory in which all other filesystems will be auto-mounted. /etc/auto.shares is the config file for the shares/ directory --timeout=400 the number of seconds the fs is unused before unmounting bash $cat /etc/auto.shares dir -fstype=auto 127.0.0.1:/etc In this case: - dir is the name of the directory inside /shares/ - -fstype=auto tells autofs to auto deduce the fs type - 127.0.0.1:/etc is the path to the network share we want to mount Reload changes to autofs config file sudo systemctl reload autofs To automount file systems at root level with autofs, use /- as the root directory","title":"On demand"},{"location":"Topics/Storage_Management/Managing%20LVM/","text":"Managing LVM LVM = Logical Volume Manager Objects in LVM: pv: physical volume -> partitions or entire devices vg: volume group lv: logical volume To install LVM sudo dnf install -y lvm2 Managing physical volumes Create new physical volumes sudo pvcreate /dev/sdb /dev/sdc ... List physical volumes sudo pvdisplay Delete physical volumes sudo pvremove /dev/sdc Managing volume groups Create new volume groups # vgcreate [VOLUME_NAME] [LIST OF PV] sudo vgcreate vg_name /dev/sdb Add a pv to a vg # assuming sdc is an already created pv sudo vgextend vg_name /dev/sdc Remove a pv from a vg sudo vgreduce vg_name /dev/sdc List volume groups sudo vgdisplay Delete volume groups sudo vgremove Managinc logical volumes Cerate new logical volumes sudo lvcreate --size 4G --name lv_name vg_name Resize a lv to fill a vg sudo lvresize --extents 100%VG /dev/vg_name/lv_name Resize a lv to a specific size sudo lvresize --size 2G /dev/vg_name/lv_name List logical volumes sudo lvdisplay Delete logical volumes sudo lvremove /dev/vg_name/lv_name Create a filesystem on an lv sudo mkfs.xfs /dev/vg_name/lv_name","title":"Managing LVM"},{"location":"Topics/Storage_Management/Managing%20LVM/#managing-lvm","text":"LVM = Logical Volume Manager Objects in LVM: pv: physical volume -> partitions or entire devices vg: volume group lv: logical volume To install LVM sudo dnf install -y lvm2","title":"Managing LVM"},{"location":"Topics/Storage_Management/Managing%20LVM/#managing-physical-volumes","text":"Create new physical volumes sudo pvcreate /dev/sdb /dev/sdc ... List physical volumes sudo pvdisplay Delete physical volumes sudo pvremove /dev/sdc","title":"Managing physical volumes"},{"location":"Topics/Storage_Management/Managing%20LVM/#managing-volume-groups","text":"Create new volume groups # vgcreate [VOLUME_NAME] [LIST OF PV] sudo vgcreate vg_name /dev/sdb Add a pv to a vg # assuming sdc is an already created pv sudo vgextend vg_name /dev/sdc Remove a pv from a vg sudo vgreduce vg_name /dev/sdc List volume groups sudo vgdisplay Delete volume groups sudo vgremove","title":"Managing volume groups"},{"location":"Topics/Storage_Management/Managing%20LVM/#managinc-logical-volumes","text":"Cerate new logical volumes sudo lvcreate --size 4G --name lv_name vg_name Resize a lv to fill a vg sudo lvresize --extents 100%VG /dev/vg_name/lv_name Resize a lv to a specific size sudo lvresize --size 2G /dev/vg_name/lv_name List logical volumes sudo lvdisplay Delete logical volumes sudo lvremove /dev/vg_name/lv_name Create a filesystem on an lv sudo mkfs.xfs /dev/vg_name/lv_name","title":"Managinc logical volumes"},{"location":"Topics/Storage_Management/Managing%20Quotas/","text":"Managing Quotas Manage user quotas sudo edquota --user [username] Manage group quotas sudo edquota --group [groupname] Show configured quota for user sudo quota --user [username] Show configured quota for group sudo quota --group [groupname] Note: hard limits can never be exceeded soft limits can be exceeded for a given grace period Edit grace period sudo quota --edit-period Enabling quota on xfs Install utility sudo dnf install -y quota Modify mount options # make sure the usrquota,grpquota options are specified in /etc/fstab $ cat /etc/fstab # [...] /dev/sdb /mnt xfs defaults,usrquota,grpquota 0 2 Enabling quota on ext4 Install utility sudo dnf install -y quota Enable quota on disk sudo quotacheck --create-files --user --group /dev/sdb Enable quota on mount point sudo quotaon /mnt","title":"Managing Quotas"},{"location":"Topics/Storage_Management/Managing%20Quotas/#managing-quotas","text":"Manage user quotas sudo edquota --user [username] Manage group quotas sudo edquota --group [groupname] Show configured quota for user sudo quota --user [username] Show configured quota for group sudo quota --group [groupname] Note: hard limits can never be exceeded soft limits can be exceeded for a given grace period Edit grace period sudo quota --edit-period","title":"Managing Quotas"},{"location":"Topics/Storage_Management/Managing%20Quotas/#enabling-quota-on-xfs","text":"Install utility sudo dnf install -y quota Modify mount options # make sure the usrquota,grpquota options are specified in /etc/fstab $ cat /etc/fstab # [...] /dev/sdb /mnt xfs defaults,usrquota,grpquota 0 2","title":"Enabling quota on xfs"},{"location":"Topics/Storage_Management/Managing%20Quotas/#enabling-quota-on-ext4","text":"Install utility sudo dnf install -y quota Enable quota on disk sudo quotacheck --create-files --user --group /dev/sdb Enable quota on mount point sudo quotaon /mnt","title":"Enabling quota on ext4"},{"location":"Topics/Storage_Management/Managing%20RAID/","text":"Managing RAID RAID = redundant array of independent disks RAID allows us to group together disks to increase capacity, speed and/or redundancy RAID levels: 0 -> stripe spread data across all disks 1 disk dies, we lose everything best performance highest risk highest capacity 1 -> mirror mirrors data on all disks any of the disks can die as long as we still remain with 1 good performance lowest risk lowest capacity 5 -> 1 disk of parity 1 disks stores extra partity data for the other disks in the array 1 disk dies, we're still ok; 2 disks die we lose everything mediocre performance medium risk good capacity 6 -> 2 disks of parity same as RAID 5 but with 1 extra disk can endure 2 disk failures mediocre performance low-ish risk low-ish capacity 10 -> radi1 of raid0 min 4 disks, 2 groups of raid1 set up in raid0 very good performance can endure 2 disk failures (as long as they fail in different pools) medium risk medium capacity Command: mdadm Create a RAID0 of /dev/sdb and /dev/sdc sudo mdadm --create /dev/md0 --level=0 --raid-devices=2 /dev/sdb /dev/sdc Create a fs on a RAID device sudo mkfs.xfs /dev/md0 Stop an array sudo mdadm --stop /dev/md0 Create a RAID1 of /dev/sdb and /dev/sdc using /dev/sdd as a spare disk sudo mdadm --create /dev/md0 --level=1 --raid-devices=2 /dev/sdb /dev/sdc --spare-devices=1 /dev/sdd Delete superblocks on previously RAIDed disks sudo mdadm --zero-superblock /dev/sdb /dev/sdc Add another disk to aa array sudo mdadm --manage /dev/md0 --add /dev/sdc Remove disk from array sudo mdadm --remove /dev/md0 --add /dev/sdc Check array status cat /proc/mdstat","title":"Managing RAID"},{"location":"Topics/Storage_Management/Managing%20RAID/#managing-raid","text":"RAID = redundant array of independent disks RAID allows us to group together disks to increase capacity, speed and/or redundancy RAID levels: 0 -> stripe spread data across all disks 1 disk dies, we lose everything best performance highest risk highest capacity 1 -> mirror mirrors data on all disks any of the disks can die as long as we still remain with 1 good performance lowest risk lowest capacity 5 -> 1 disk of parity 1 disks stores extra partity data for the other disks in the array 1 disk dies, we're still ok; 2 disks die we lose everything mediocre performance medium risk good capacity 6 -> 2 disks of parity same as RAID 5 but with 1 extra disk can endure 2 disk failures mediocre performance low-ish risk low-ish capacity 10 -> radi1 of raid0 min 4 disks, 2 groups of raid1 set up in raid0 very good performance can endure 2 disk failures (as long as they fail in different pools) medium risk medium capacity Command: mdadm Create a RAID0 of /dev/sdb and /dev/sdc sudo mdadm --create /dev/md0 --level=0 --raid-devices=2 /dev/sdb /dev/sdc Create a fs on a RAID device sudo mkfs.xfs /dev/md0 Stop an array sudo mdadm --stop /dev/md0 Create a RAID1 of /dev/sdb and /dev/sdc using /dev/sdd as a spare disk sudo mdadm --create /dev/md0 --level=1 --raid-devices=2 /dev/sdb /dev/sdc --spare-devices=1 /dev/sdd Delete superblocks on previously RAIDed disks sudo mdadm --zero-superblock /dev/sdb /dev/sdc Add another disk to aa array sudo mdadm --manage /dev/md0 --add /dev/sdc Remove disk from array sudo mdadm --remove /dev/md0 --add /dev/sdc Check array status cat /proc/mdstat","title":"Managing RAID"},{"location":"Topics/Storage_Management/Managing%20Storage%20Partitions/","text":"Managing Storage Partitions Show all block devices lsblk To get the UUID of a block device sudo blkid [DEVICE] Show partitions on a block device fdisk --list /dev/sda To visually manage partitions on a block device cfdisk /dev/sda","title":"Managing Storage Partitions"},{"location":"Topics/Storage_Management/Managing%20Storage%20Partitions/#managing-storage-partitions","text":"Show all block devices lsblk To get the UUID of a block device sudo blkid [DEVICE] Show partitions on a block device fdisk --list /dev/sda To visually manage partitions on a block device cfdisk /dev/sda","title":"Managing Storage Partitions"},{"location":"Topics/Storage_Management/Managing%20Swap%20Space/","text":"Managing Swap Space swap: an \"extension\" of the system memory, stored on disk the system will move unused items from RAM to swap (on disk) when more memory would be needed but no more is left To check if the system uses swap swapon --show Format a partition as swap sudo mkswap /dev/sda3 Format a file as swap dd if=/dev/zero of=/swap bs=1M count=2048 # Create 2Gb swap file chmod 600 /swap mkswap /swap Enable a swap device swapon /swap Disable a swap device swapoff /swap Increase swapfile size # Stop using swap file sudo swapoff /swapfile # Increase swapfile size by 1G sudo dd if=/dev/zero of=/swapfile bs=1M count=1024 oflag=append # Re-format it as swap sudo mkswap /swapfile # Start using swap again sudo swapon /swapfile","title":"Managing Swap Space"},{"location":"Topics/Storage_Management/Managing%20Swap%20Space/#managing-swap-space","text":"swap: an \"extension\" of the system memory, stored on disk the system will move unused items from RAM to swap (on disk) when more memory would be needed but no more is left To check if the system uses swap swapon --show Format a partition as swap sudo mkswap /dev/sda3 Format a file as swap dd if=/dev/zero of=/swap bs=1M count=2048 # Create 2Gb swap file chmod 600 /swap mkswap /swap Enable a swap device swapon /swap Disable a swap device swapoff /swap Increase swapfile size # Stop using swap file sudo swapoff /swapfile # Increase swapfile size by 1G sudo dd if=/dev/zero of=/swapfile bs=1M count=1024 oflag=append # Re-format it as swap sudo mkswap /swapfile # Start using swap again sudo swapon /swapfile","title":"Managing Swap Space"},{"location":"Topics/User_and_Group_Management/","text":"User and Group Management Topics Managing Local Groups Managing Local Users System-wide Environment Profiles Template User Environment Managing User Privileges Configure PAM","title":"Index"},{"location":"Topics/User_and_Group_Management/#user-and-group-management","text":"","title":"User and Group Management"},{"location":"Topics/User_and_Group_Management/#topics","text":"Managing Local Groups Managing Local Users System-wide Environment Profiles Template User Environment Managing User Privileges Configure PAM","title":"Topics"},{"location":"Topics/User_and_Group_Management/Configure%20PAM/","text":"Configure PAM PAM = pluggable authentication modules Configuration files: - /etc/pam.conf - /etc/pam.d/* Examples : Edit the PAM configuration for the su command vi /etc/pam.d/su For more details about the pam configuration and the syntax of the conf file, refer to the man pages man pam For more information about the individual modules, refer to their respective man pages: mike@lfcs:~/LFCS-Study-Guide$ man pam #<TAB><TAB> pam pam_faillock pam_motd pam_systemd pam-auth-update pam_filter pam_namespace pam_time pam.conf pam_ftp pam_namespace_helper pam_timestamp pam.d pam_getenv pam_nologin pam_timestamp_check pam_access pam_group pam_permit pam_tty_audit pam_cap pam_issue pam_pwhistory pam_umask pam_debug pam_keyinit pam_rhosts pam_unix pam_deny pam_lastlog pam_rootok pam_userdb pam_echo pam_limits pam_securetty pam_usertype pam_env pam_listfile pam_selinux pam_warn pam_env.conf pam_localuser pam_sepermit pam_wheel pam_exec pam_loginuid pam_setquota pam_xauth pam_extrausers pam_mail pam_shells pam_faildelay pam_mkhomedir pam_succeed_if","title":"Configure PAM"},{"location":"Topics/User_and_Group_Management/Configure%20PAM/#configure-pam","text":"PAM = pluggable authentication modules Configuration files: - /etc/pam.conf - /etc/pam.d/* Examples : Edit the PAM configuration for the su command vi /etc/pam.d/su For more details about the pam configuration and the syntax of the conf file, refer to the man pages man pam For more information about the individual modules, refer to their respective man pages: mike@lfcs:~/LFCS-Study-Guide$ man pam #<TAB><TAB> pam pam_faillock pam_motd pam_systemd pam-auth-update pam_filter pam_namespace pam_time pam.conf pam_ftp pam_namespace_helper pam_timestamp pam.d pam_getenv pam_nologin pam_timestamp_check pam_access pam_group pam_permit pam_tty_audit pam_cap pam_issue pam_pwhistory pam_umask pam_debug pam_keyinit pam_rhosts pam_unix pam_deny pam_lastlog pam_rootok pam_userdb pam_echo pam_limits pam_securetty pam_usertype pam_env pam_listfile pam_selinux pam_warn pam_env.conf pam_localuser pam_sepermit pam_wheel pam_exec pam_loginuid pam_setquota pam_xauth pam_extrausers pam_mail pam_shells pam_faildelay pam_mkhomedir pam_succeed_if","title":"Configure PAM"},{"location":"Topics/User_and_Group_Management/Managing%20Local%20Groups/","text":"Managing Local Groups Create a Local Group groupadd [options] [group_name] Example : # Create `developers` group: groupadd developers A user can have a primary group as well as secondary groups. When a user launches a program, the file runs with the permissions of the user and their group When a user creates a file, the user and group owners of the file are the user and their primary group Modify a Local Group gpasswd [option] [group_name] groupmod [option] [group_name] Add user to group: gpasswd --add john developers` # or -a Remove user from group: gpasswd --delete john developers` # or -d Change group name: groupmod --new-name devs developers` # or -n Delete a Local Group groupdel [group_name] Delete developers group: groupdel developers Note: Groups that are set as primary for at least 1 user cannot be deleted Useful commands See the groups a user belongs to: groups john Change primary group for user: usermod -g developers john Change secondary groups for user: usermod -G developers,root john","title":"Managing Local Groups"},{"location":"Topics/User_and_Group_Management/Managing%20Local%20Groups/#managing-local-groups","text":"","title":"Managing Local Groups"},{"location":"Topics/User_and_Group_Management/Managing%20Local%20Groups/#create-a-local-group","text":"groupadd [options] [group_name] Example : # Create `developers` group: groupadd developers A user can have a primary group as well as secondary groups. When a user launches a program, the file runs with the permissions of the user and their group When a user creates a file, the user and group owners of the file are the user and their primary group","title":"Create a Local Group"},{"location":"Topics/User_and_Group_Management/Managing%20Local%20Groups/#modify-a-local-group","text":"gpasswd [option] [group_name] groupmod [option] [group_name] Add user to group: gpasswd --add john developers` # or -a Remove user from group: gpasswd --delete john developers` # or -d Change group name: groupmod --new-name devs developers` # or -n","title":"Modify a Local Group"},{"location":"Topics/User_and_Group_Management/Managing%20Local%20Groups/#delete-a-local-group","text":"groupdel [group_name] Delete developers group: groupdel developers Note: Groups that are set as primary for at least 1 user cannot be deleted","title":"Delete a Local Group"},{"location":"Topics/User_and_Group_Management/Managing%20Local%20Groups/#useful-commands","text":"See the groups a user belongs to: groups john Change primary group for user: usermod -g developers john Change secondary groups for user: usermod -G developers,root john","title":"Useful commands"},{"location":"Topics/User_and_Group_Management/Managing%20Local%20Users/","text":"Managing Local Users Create a Local Account useradd [username] [options] The useradd john command creates the following resources: - creates john account - creates john group - sets main group of john user to be john - creates /home/john directory with the contents of /etc/skel - sets default shell of john to /bin/bash To see defaults for account creation: mike@lfcs:~$ useradd --defaults GROUP=100 HOME=/home INACTIVE=-1 EXPIRE= SHELL=/bin/sh SKEL=/etc/skel CREATE_MAIL_SPOOL=no Or take a look at /etc/login.defs . Useful flags : Set custom home dir: --home-dir /home/newdir Set custom shell: --shell /bin/othershell / -s Append other groups: --groups group1,group2 / -G Set custom uid: --uid 1001 / -u Create system account: --system Modify a Local User Account General Modifications usermod [options] [username] Change user home: usermod --home /home/new john Change user home (and copy files): usermod --home /home/new --move-home john Change user name (john to jane): usermod --login jane john Change default shell: usermod --shell /bin/othershell john Disable account: usermod --lock john # or -L Enable account: usermod --unlock john # or -U Set expiration: usermod --expiredate YYYY-MM-DD john Add user to group: usermod -append --groups group john # or -aG Password modifications passwd [options] [username] Change user password: passwd john Delete user password: passwd --delete # or -d Lock user: passwd --lock john # or -l Unlock user: passwd --unlock john # or -u Force expire a password: passwd --expire john # or -e Set password max age: passwd --maxdays 5 Set password warning age: passwd --warndays 5 Note: account expiration block user login. Password expiration forces user to change password. Delete a Local User Account userdel [username] [options] The userdel john command will only delete the user and group (if empty). To also remove the home directory, use the --remove / -r flag. Useful commands Show logged in user username: whoami Show uid, gid, groups etc. of logged in user: id","title":"Managing Local Users"},{"location":"Topics/User_and_Group_Management/Managing%20Local%20Users/#managing-local-users","text":"","title":"Managing Local Users"},{"location":"Topics/User_and_Group_Management/Managing%20Local%20Users/#create-a-local-account","text":"useradd [username] [options] The useradd john command creates the following resources: - creates john account - creates john group - sets main group of john user to be john - creates /home/john directory with the contents of /etc/skel - sets default shell of john to /bin/bash To see defaults for account creation: mike@lfcs:~$ useradd --defaults GROUP=100 HOME=/home INACTIVE=-1 EXPIRE= SHELL=/bin/sh SKEL=/etc/skel CREATE_MAIL_SPOOL=no Or take a look at /etc/login.defs . Useful flags : Set custom home dir: --home-dir /home/newdir Set custom shell: --shell /bin/othershell / -s Append other groups: --groups group1,group2 / -G Set custom uid: --uid 1001 / -u Create system account: --system","title":"Create a Local Account"},{"location":"Topics/User_and_Group_Management/Managing%20Local%20Users/#modify-a-local-user-account","text":"","title":"Modify a Local User Account"},{"location":"Topics/User_and_Group_Management/Managing%20Local%20Users/#general-modifications","text":"usermod [options] [username] Change user home: usermod --home /home/new john Change user home (and copy files): usermod --home /home/new --move-home john Change user name (john to jane): usermod --login jane john Change default shell: usermod --shell /bin/othershell john Disable account: usermod --lock john # or -L Enable account: usermod --unlock john # or -U Set expiration: usermod --expiredate YYYY-MM-DD john Add user to group: usermod -append --groups group john # or -aG","title":"General Modifications"},{"location":"Topics/User_and_Group_Management/Managing%20Local%20Users/#password-modifications","text":"passwd [options] [username] Change user password: passwd john Delete user password: passwd --delete # or -d Lock user: passwd --lock john # or -l Unlock user: passwd --unlock john # or -u Force expire a password: passwd --expire john # or -e Set password max age: passwd --maxdays 5 Set password warning age: passwd --warndays 5 Note: account expiration block user login. Password expiration forces user to change password.","title":"Password modifications"},{"location":"Topics/User_and_Group_Management/Managing%20Local%20Users/#delete-a-local-user-account","text":"userdel [username] [options] The userdel john command will only delete the user and group (if empty). To also remove the home directory, use the --remove / -r flag.","title":"Delete a Local User Account"},{"location":"Topics/User_and_Group_Management/Managing%20Local%20Users/#useful-commands","text":"Show logged in user username: whoami Show uid, gid, groups etc. of logged in user: id","title":"Useful commands"},{"location":"Topics/User_and_Group_Management/Managing%20User%20Privileges/","text":"Managing User Privileges Executing commands as root sudo [command] Note: user has to be part of wheel/sudoers group Logging in as root sudo --login su - Disable logins as root sudo passwd --lock root sudo passwd -l root Note: Locking the root password will disable this, but not the usage of sudo. Add user to root group usermod -aG wheel user # for rhel usermod -aG sudo user # for debian The sudoers file To manage who can run what commands with elevated privileges, edit the /etc/sudoers file. Do not edit this file manually, use the visudo command. The file format : USER HOST=(RUN_AS) COMMANDS %GROUP HOST=(RUN_AS) COMMANDS Examples : Allow all users in administrators group to run any command as sudo with no password %administrators ALL=(ALL) NOPASSWD: ALL Allow john to run only ls as sudo john ALL=(ALL) /bin/ls Allow john to run only ls as sudo with no password john ALL=(ALL) NOPASSWD: /bin/ls Allow john to run commands as mike or annie johnn ALL=(mike,annie) ALL","title":"Managing User Privileges"},{"location":"Topics/User_and_Group_Management/Managing%20User%20Privileges/#managing-user-privileges","text":"","title":"Managing User Privileges"},{"location":"Topics/User_and_Group_Management/Managing%20User%20Privileges/#executing-commands-as-root","text":"sudo [command] Note: user has to be part of wheel/sudoers group","title":"Executing commands as root"},{"location":"Topics/User_and_Group_Management/Managing%20User%20Privileges/#logging-in-as-root","text":"sudo --login su -","title":"Logging in as root"},{"location":"Topics/User_and_Group_Management/Managing%20User%20Privileges/#disable-logins-as-root","text":"sudo passwd --lock root sudo passwd -l root Note: Locking the root password will disable this, but not the usage of sudo.","title":"Disable logins as root"},{"location":"Topics/User_and_Group_Management/Managing%20User%20Privileges/#add-user-to-root-group","text":"usermod -aG wheel user # for rhel usermod -aG sudo user # for debian","title":"Add user to root group"},{"location":"Topics/User_and_Group_Management/Managing%20User%20Privileges/#the-sudoers-file","text":"To manage who can run what commands with elevated privileges, edit the /etc/sudoers file. Do not edit this file manually, use the visudo command. The file format : USER HOST=(RUN_AS) COMMANDS %GROUP HOST=(RUN_AS) COMMANDS Examples : Allow all users in administrators group to run any command as sudo with no password %administrators ALL=(ALL) NOPASSWD: ALL Allow john to run only ls as sudo john ALL=(ALL) /bin/ls Allow john to run only ls as sudo with no password john ALL=(ALL) NOPASSWD: /bin/ls Allow john to run commands as mike or annie johnn ALL=(mike,annie) ALL","title":"The sudoers file"},{"location":"Topics/User_and_Group_Management/System-wide%20Environment%20Profiles/","text":"System-wide Environment Profiles Show current environment variables: env Set environment variables For the current shell session mike@lfcs:~/LFCS-Study-Guide$ VARIABLE=123 mike@lfcs:~/LFCS-Study-Guide$ echo $VARIABLE 123 For all users Edit the /etc/environment file. mike@lfcs:~/LFCS-Study-Guide$ echo \"VARIABLE=1234\" | sudo tee /etc/environment VARIABLE=1234 mike@lfcs:~/LFCS-Study-Guide$ source /etc/environment mike@lfcs:~/LFCS-Study-Guide$ echo $VARIABLE 1234 For logged in user Edit the ~/.bashrc file. mike@lfcs:~/LFCS-Study-Guide$ echo \"VARIABLE=12345\" >> ~/.bashrc mike@lfcs:~/LFCS-Study-Guide$ source ~/.bashrc mike@lfcs:~/LFCS-Study-Guide$ echo $VARIABLE 12345 Execute file on login Add *.sh scripts to /etc/profile.d/ directory.","title":"System-wide Environment Profiles"},{"location":"Topics/User_and_Group_Management/System-wide%20Environment%20Profiles/#system-wide-environment-profiles","text":"Show current environment variables: env","title":"System-wide Environment Profiles"},{"location":"Topics/User_and_Group_Management/System-wide%20Environment%20Profiles/#set-environment-variables","text":"","title":"Set environment variables"},{"location":"Topics/User_and_Group_Management/System-wide%20Environment%20Profiles/#for-the-current-shell-session","text":"mike@lfcs:~/LFCS-Study-Guide$ VARIABLE=123 mike@lfcs:~/LFCS-Study-Guide$ echo $VARIABLE 123","title":"For the current shell session"},{"location":"Topics/User_and_Group_Management/System-wide%20Environment%20Profiles/#for-all-users","text":"Edit the /etc/environment file. mike@lfcs:~/LFCS-Study-Guide$ echo \"VARIABLE=1234\" | sudo tee /etc/environment VARIABLE=1234 mike@lfcs:~/LFCS-Study-Guide$ source /etc/environment mike@lfcs:~/LFCS-Study-Guide$ echo $VARIABLE 1234","title":"For all users"},{"location":"Topics/User_and_Group_Management/System-wide%20Environment%20Profiles/#for-logged-in-user","text":"Edit the ~/.bashrc file. mike@lfcs:~/LFCS-Study-Guide$ echo \"VARIABLE=12345\" >> ~/.bashrc mike@lfcs:~/LFCS-Study-Guide$ source ~/.bashrc mike@lfcs:~/LFCS-Study-Guide$ echo $VARIABLE 12345","title":"For logged in user"},{"location":"Topics/User_and_Group_Management/System-wide%20Environment%20Profiles/#execute-file-on-login","text":"Add *.sh scripts to /etc/profile.d/ directory.","title":"Execute file on login"},{"location":"Topics/User_and_Group_Management/User%20Resource%20Limits/","text":"Managing User Resource Limits Resource limits file: /ets/security/limits.conf . The file itself is thoroughly documented, so refer to it for more details: vi /etc/security/limits.conf Command: ulimit Configuration Format <domain> <type> <item> <value> user hard|soft|- [see file] N @group hard|soft|- [see file] N Hard limits are the upper bound for a given limit. Soft limits are a \"soft\" bound, in the sense that initially the limit is set to that value, but it can be modified by the user to any other value (smaller than the hard limit) if needed. - set both the hard and soft limits Example : Limit the developers group to only run 30 processes @developers hard nproc 30 Limit john only 5 seconds of CPU time @developers hard cpu 5 See limits for the current session mike@lfcs:~/LFCS-Study-Guide$ ulimit -a real-time non-blocking time (microseconds, -R) unlimited core file size (blocks, -c) 0 data seg size (kbytes, -d) unlimited scheduling priority (-e) 0 file size (blocks, -f) unlimited pending signals (-i) 3721 max locked memory (kbytes, -l) 124088 max memory size (kbytes, -m) unlimited open files (-n) 1048576 pipe size (512 bytes, -p) 8 POSIX message queues (bytes, -q) 819200 real-time priority (-r) 0 stack size (kbytes, -s) 8192 cpu time (seconds, -t) unlimited max user processes (-u) 3721 virtual memory (kbytes, -v) unlimited file locks (-x) unlimited Modifying limits To change limits on the fly for the current session, use the ulimit command. Refer to the manpage or help flag for more details: ulimit --help man ulimit","title":"Managing User Resource Limits"},{"location":"Topics/User_and_Group_Management/User%20Resource%20Limits/#managing-user-resource-limits","text":"Resource limits file: /ets/security/limits.conf . The file itself is thoroughly documented, so refer to it for more details: vi /etc/security/limits.conf Command: ulimit","title":"Managing User Resource Limits"},{"location":"Topics/User_and_Group_Management/User%20Resource%20Limits/#configuration-format","text":"<domain> <type> <item> <value> user hard|soft|- [see file] N @group hard|soft|- [see file] N Hard limits are the upper bound for a given limit. Soft limits are a \"soft\" bound, in the sense that initially the limit is set to that value, but it can be modified by the user to any other value (smaller than the hard limit) if needed. - set both the hard and soft limits Example : Limit the developers group to only run 30 processes @developers hard nproc 30 Limit john only 5 seconds of CPU time @developers hard cpu 5","title":"Configuration Format"},{"location":"Topics/User_and_Group_Management/User%20Resource%20Limits/#see-limits-for-the-current-session","text":"mike@lfcs:~/LFCS-Study-Guide$ ulimit -a real-time non-blocking time (microseconds, -R) unlimited core file size (blocks, -c) 0 data seg size (kbytes, -d) unlimited scheduling priority (-e) 0 file size (blocks, -f) unlimited pending signals (-i) 3721 max locked memory (kbytes, -l) 124088 max memory size (kbytes, -m) unlimited open files (-n) 1048576 pipe size (512 bytes, -p) 8 POSIX message queues (bytes, -q) 819200 real-time priority (-r) 0 stack size (kbytes, -s) 8192 cpu time (seconds, -t) unlimited max user processes (-u) 3721 virtual memory (kbytes, -v) unlimited file locks (-x) unlimited","title":"See limits for the current session"},{"location":"Topics/User_and_Group_Management/User%20Resource%20Limits/#modifying-limits","text":"To change limits on the fly for the current session, use the ulimit command. Refer to the manpage or help flag for more details: ulimit --help man ulimit","title":"Modifying limits"}]}